package tb;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Logger;
import java.util.logging.FileHandler;
import java.sql.PreparedStatement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import java.sql.*;
import java.time.temporal.ChronoUnit;
import java.util.Arrays;
import java.util.Scanner;
import java.util.regex.Pattern;

/**
 *
 * @author Lenovo
 */
public class BranchUpdate extends javax.swing.JFrame {

    /**
     * Creates new form NewLetter
     */
    public BranchUpdate() {
        try {
            logFiles();
        }
        catch(IOException e) {
            e.printStackTrace();
        }
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelHeader = new javax.swing.JPanel();
        NewLetterHeading = new javax.swing.JLabel();
        PanelBody = new javax.swing.JPanel();
        InwardRegisterNo = new javax.swing.JLabel();
        DateReceived = new javax.swing.JLabel();
        From = new javax.swing.JLabel();
        Feedback = new javax.swing.JLabel();
        DateCompleted = new javax.swing.JLabel();
        CompletedInDays = new javax.swing.JLabel();
        InwardRegisterNoField = new javax.swing.JTextField();
        DateReceivedField = new javax.swing.JTextField();
        FromField = new javax.swing.JTextField();
        FeedbackScroll = new javax.swing.JScrollPane();
        FeedbackArea = new javax.swing.JTextArea();
        DateCompletedField = new javax.swing.JTextField();
        CompletedInDaysLabel = new javax.swing.JLabel();
        ShowTodayReceived = new javax.swing.JButton();
        ShowTodayCompleted = new javax.swing.JButton();
        CalculateDays = new javax.swing.JButton();
        Subject = new javax.swing.JLabel();
        SubjectField = new javax.swing.JTextField();
        PanelFooter = new javax.swing.JPanel();
        BackButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(100, 100, 700, 500));
        setResizable(false);
        setSize(new java.awt.Dimension(700, 500));

        PanelHeader.setBackground(new java.awt.Color(232, 246, 239));
        PanelHeader.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.lightGray));

        NewLetterHeading.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        NewLetterHeading.setForeground(new java.awt.Color(76, 76, 109));
        NewLetterHeading.setText("Insert New Letter Info");
        NewLetterHeading.setMaximumSize(new java.awt.Dimension(140, 32));
        NewLetterHeading.setMinimumSize(new java.awt.Dimension(140, 32));
        NewLetterHeading.setPreferredSize(new java.awt.Dimension(140, 32));

        javax.swing.GroupLayout PanelHeaderLayout = new javax.swing.GroupLayout(PanelHeader);
        PanelHeader.setLayout(PanelHeaderLayout);
        PanelHeaderLayout.setHorizontalGroup(
            PanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelHeaderLayout.createSequentialGroup()
                .addGap(258, 258, 258)
                .addComponent(NewLetterHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(258, 258, 258))
        );
        PanelHeaderLayout.setVerticalGroup(
            PanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHeaderLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(NewLetterHeading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        PanelBody.setBackground(new java.awt.Color(232, 246, 239));
        PanelBody.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.lightGray));

        InwardRegisterNo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        InwardRegisterNo.setForeground(new java.awt.Color(76, 76, 109));
        InwardRegisterNo.setText("Inward Register Number");

        DateReceived.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        DateReceived.setForeground(new java.awt.Color(76, 76, 109));
        DateReceived.setText("Date Received");

        From.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        From.setForeground(new java.awt.Color(76, 76, 109));
        From.setText("From");

        Feedback.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Feedback.setForeground(new java.awt.Color(76, 76, 109));
        Feedback.setText("Feedback");

        DateCompleted.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        DateCompleted.setForeground(new java.awt.Color(76, 76, 109));
        DateCompleted.setText("Date Completed");

        CompletedInDays.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        CompletedInDays.setForeground(new java.awt.Color(76, 76, 109));
        CompletedInDays.setText("Completed In Days:");

        DateReceivedField.setText("dd-MM-yyyy");
        DateReceivedField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DateReceivedFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DateReceivedFieldFocusLost(evt);
            }
        });
        DateReceivedField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DateReceivedFieldMouseClicked(evt);
            }
        });
        DateReceivedField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateReceivedFieldActionPerformed(evt);
            }
        });

        FromField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromFieldActionPerformed(evt);
            }
        });

        FeedbackArea.setColumns(20);
        FeedbackArea.setRows(5);
        FeedbackScroll.setViewportView(FeedbackArea);

        DateCompletedField.setText("dd-MM-yyyy");
        DateCompletedField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DateCompletedFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DateCompletedFieldFocusLost(evt);
            }
        });
        DateCompletedField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateCompletedFieldActionPerformed(evt);
            }
        });
        DateCompletedField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                DateCompletedFieldPropertyChange(evt);
            }
        });

        CompletedInDaysLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        CompletedInDaysLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CompletedInDaysLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ShowTodayReceived.setBackground(new java.awt.Color(35, 62, 139));
        ShowTodayReceived.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        ShowTodayReceived.setForeground(new java.awt.Color(255, 255, 255));
        ShowTodayReceived.setText("Show Today");
        ShowTodayReceived.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowTodayReceivedActionPerformed(evt);
            }
        });

        ShowTodayCompleted.setBackground(new java.awt.Color(35, 62, 139));
        ShowTodayCompleted.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        ShowTodayCompleted.setForeground(new java.awt.Color(255, 255, 255));
        ShowTodayCompleted.setText("Show Today");
        ShowTodayCompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowTodayCompletedActionPerformed(evt);
            }
        });

        CalculateDays.setBackground(new java.awt.Color(35, 62, 139));
        CalculateDays.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        CalculateDays.setForeground(new java.awt.Color(255, 255, 255));
        CalculateDays.setText("Calculate Days");
        CalculateDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateDaysActionPerformed(evt);
            }
        });

        Subject.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Subject.setForeground(new java.awt.Color(76, 76, 109));
        Subject.setText("Subject");

        javax.swing.GroupLayout PanelBodyLayout = new javax.swing.GroupLayout(PanelBody);
        PanelBody.setLayout(PanelBodyLayout);
        PanelBodyLayout.setHorizontalGroup(
            PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBodyLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBodyLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelBodyLayout.createSequentialGroup()
                                .addComponent(InwardRegisterNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(FromField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelBodyLayout.createSequentialGroup()
                                .addComponent(InwardRegisterNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(From, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBodyLayout.createSequentialGroup()
                                .addComponent(DateReceivedField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ShowTodayReceived))
                            .addComponent(DateReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(PanelBodyLayout.createSequentialGroup()
                            .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBodyLayout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(Feedback, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PanelBodyLayout.createSequentialGroup()
                                    .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(Subject, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(PanelBodyLayout.createSequentialGroup()
                                            .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(CompletedInDays, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(SubjectField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(2, 2, 2)))
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addGap(18, 18, 18)
                            .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(PanelBodyLayout.createSequentialGroup()
                                        .addGap(218, 218, 218)
                                        .addComponent(DateCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(FeedbackScroll))
                                .addGroup(PanelBodyLayout.createSequentialGroup()
                                    .addComponent(CompletedInDaysLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(CalculateDays)))
                            .addGap(2, 2, 2))
                        .addGroup(PanelBodyLayout.createSequentialGroup()
                            .addGap(438, 438, 438)
                            .addComponent(DateCompletedField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(ShowTodayCompleted))))
                .addGap(42, 42, 42))
        );
        PanelBodyLayout.setVerticalGroup(
            PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBodyLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InwardRegisterNo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(From, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DateReceivedField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(InwardRegisterNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FromField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ShowTodayReceived, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DateCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Subject, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ShowTodayCompleted, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelBodyLayout.createSequentialGroup()
                        .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DateCompletedField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SubjectField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CalculateDays, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(CompletedInDaysLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CompletedInDays, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Feedback, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FeedbackScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        PanelFooter.setBackground(new java.awt.Color(232, 246, 239));
        PanelFooter.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.lightGray));

        BackButton.setBackground(new java.awt.Color(35, 62, 139));
        BackButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        BackButton.setForeground(new java.awt.Color(255, 255, 255));
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        UpdateButton.setBackground(new java.awt.Color(35, 62, 139));
        UpdateButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        UpdateButton.setForeground(new java.awt.Color(255, 255, 255));
        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        SearchButton.setBackground(new java.awt.Color(35, 62, 139));
        SearchButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        SearchButton.setForeground(new java.awt.Color(255, 255, 255));
        SearchButton.setText("Search");
        SearchButton.setToolTipText("Please Enter Only Inward Register Number");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        DeleteButton.setBackground(new java.awt.Color(35, 62, 139));
        DeleteButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        DeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        DeleteButton.setText("Delete");
        DeleteButton.setToolTipText("Please Enter Only Inward Register Number");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelFooterLayout = new javax.swing.GroupLayout(PanelFooter);
        PanelFooter.setLayout(PanelFooterLayout);
        PanelFooterLayout.setHorizontalGroup(
            PanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFooterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelFooterLayout.setVerticalGroup(
            PanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFooterLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UpdateButton)
                    .addComponent(SearchButton)
                    .addComponent(DeleteButton))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelBody, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PanelBody, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PanelFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FromFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FromFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FromFieldActionPerformed

    private void DateReceivedFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateReceivedFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateReceivedFieldActionPerformed

    private void ShowTodayCompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowTodayCompletedActionPerformed
        // TODO add your handling code here:
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String date = LocalDate.now().format(formatter);
        
        DateCompletedField.setText(date);   
        
        DateCompletedCheck();
    }//GEN-LAST:event_ShowTodayCompletedActionPerformed

    private void ShowTodayReceivedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowTodayReceivedActionPerformed
        // TODO add your handling code here:
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String date = LocalDate.now().format(formatter);
        
        DateReceivedField.setText(date);
        
        DateReceivedCheck();
    }//GEN-LAST:event_ShowTodayReceivedActionPerformed

    private void DateCompletedFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_DateCompletedFieldPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_DateCompletedFieldPropertyChange

    private void CalculateDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateDaysActionPerformed
        // TODO add your handling code here:
        String MatcherText = "dd-MM-yyyy";
        String drf = DateReceivedField.getText();
        String dcf = DateCompletedField.getText();
        if (!(drf.equals(MatcherText) && dcf.equals(MatcherText))) {
            CalculateDaysFunction();
        }
        else {
            JOptionPane.showMessageDialog(null, "Please Enter Correct Received/Completed Date.","Alert",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_CalculateDaysActionPerformed

    private void DateReceivedFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateReceivedFieldFocusGained
        // TODO add your handling code here:
        if (DateReceivedField.getText().equals("dd-MM-yyyy") == true) {
            DateReceivedField.setText("");
        }
        
    }//GEN-LAST:event_DateReceivedFieldFocusGained

    private void DateReceivedFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DateReceivedFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DateReceivedFieldMouseClicked

    private void DateCompletedFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateCompletedFieldFocusGained
        // TODO add your handling code here:
        if (DateCompletedField.getText().equals("dd-MM-yyyy") == true) {
            DateCompletedField.setText("");
        }
    }//GEN-LAST:event_DateCompletedFieldFocusGained

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);  
        new BranchHome().setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void DateCompletedFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateCompletedFieldFocusLost
        // TODO add your handling code here:
        DateCompletedCheck();
    }//GEN-LAST:event_DateCompletedFieldFocusLost

    private void DateReceivedFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateReceivedFieldFocusLost
        // TODO add your handling code here:
        DateReceivedCheck();
    }//GEN-LAST:event_DateReceivedFieldFocusLost

    private void DateCompletedFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateCompletedFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateCompletedFieldActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
        try {
            ConnectionEstablish con = new ConnectionEstablish();
            String sql = String.format("SELECT * FROM BranchLetter WHERE "
                + "InwardRegisterNo = %s",InwardRegisterNoField.getText());
            PreparedStatement st = con.c.prepareStatement(sql);
            ResultSet rs = st.executeQuery(sql);

//            if (rs.next() == false) {
//                JOptionPane.showMessageDialog(null, "Invalid Inward Register Number");
//            }
            
            while (rs.next()) {
                
                InwardRegisterNoField.setText(rs.getString("InwardRegisterNo"));
                FromField.setText(rs.getString("Fr"));
                DateReceivedField.setText(rs.getString("DateReceived"));
                SubjectField.setText(rs.getString("Subject"));
                DateCompletedField.setText(rs.getString("DateCompleted"));
                CompletedInDaysLabel.setText(rs.getString("CompletedInDays")+" days");
                FeedbackArea.setText(rs.getString("Feedback"));
            }

        } catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Please Enter Correct Inward Register Number");
            e.printStackTrace();
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        
        try {
            ConnectionEstablish con = new ConnectionEstablish();
            String sql = "UPDATE BranchLetter SET Fr = ?, DateReceived = ?, "
            + "Subject = ?, DateCompleted = ?,  CompletedInDays = ?,"
            + "Feedback = ? , Branch = ?, toEmployee = ? "
            + "WHERE InwardRegisterNo = ?";
            PreparedStatement st = con.c.prepareStatement(sql);
                
            String[] completed = CompletedInDaysLabel.getText().split(" ");            
            
            try {
                    File myObjRead = new File("filename.txt");
                    Scanner myReader = new Scanner(myObjRead);
                    while (myReader.hasNextLine()) {
                      String data = myReader.nextLine();
                      String[] dataArr = data.split(",");
                      String branch = dataArr[0];
                      String toEmployee = dataArr[1];
            
                    st.setString(1, FromField.getText());
                    st.setString(2, DateReceivedField.getText());
                    st.setString(3, SubjectField.getText());
                    st.setString(4, DateCompletedField.getText());
                    st.setString(5, completed[0]);
                    st.setString(6, FeedbackArea.getText());
                    st.setString(7, branch);
                    st.setString(8, toEmployee);
                    st.setString(9, InwardRegisterNoField.getText());
                    
            
            }
                myReader.close();
            } catch (FileNotFoundException e) {
                System.out.println("An error occurred.");
                e.printStackTrace();
            }

            int i = st.executeUpdate();
            if (i > 0){
                JOptionPane.showMessageDialog(null, "Successfully Updated");
            }

            clearInputs();
        } catch(SQLException esql){
            esql.printStackTrace();
            JOptionPane.showMessageDialog(null, "Please Enter Inward Register Number.");
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        String passwordDelete=JOptionPane.showInputDialog(null,"Enter Password (admin):");
        if (passwordDelete.equals("admin")) {
            try {
                ConnectionEstablish con = new ConnectionEstablish();
                String sql = String.format("DELETE FROM BranchLetter WHERE "
                    + "InwardRegisterNo = %s",InwardRegisterNoField.getText());
                PreparedStatement st = con.c.prepareStatement(sql);

                int i = st.executeUpdate();
                if (i > 0){
                    JOptionPane.showMessageDialog(null, "Successfully Deleted");
                }
                else {
                    JOptionPane.showMessageDialog(null, "Invalid Inward Register Number.");
                }

                clearInputs();


            } catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please Enter Correct Inward Register Number");
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Wrong Password");
        }
        
    }//GEN-LAST:event_DeleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    
    private void DateCompletedCheck() {
        if (DateCompletedField.getText().equals("") == true) {
            DateCompletedField.setText("dd-MM-yyyy");
        }
        else if (Pattern.compile("^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-(20[0-9][0-9])$").matcher(DateCompletedField.getText()).matches()) {
            String[] DateReceivedFieldArray = DateReceivedField.getText().split("-");
            int[] drfa = Arrays.stream(DateReceivedFieldArray).mapToInt(Integer::parseInt).toArray();
            String[] DateCompletedFieldArray = DateCompletedField.getText().split("-");
            int[] dcfa = Arrays.stream(DateCompletedFieldArray).mapToInt(Integer::parseInt).toArray();

            if (drfa[2]==dcfa[2]){
                if (drfa[1]==dcfa[1]) {
                    if (drfa[0]<=dcfa[0]) {}
                    else {
                        JOptionPane.showMessageDialog(null, "Please Enter Correct Date.","Alert",JOptionPane.WARNING_MESSAGE);
                    }                   
                }    
                else if(drfa[1]<dcfa[1]) {}
                else {
                    JOptionPane.showMessageDialog(null, "Please Enter Correct Date.","Alert",JOptionPane.WARNING_MESSAGE);
                }
            }
            else if(drfa[0]<dcfa[0]) {}
            else {
                JOptionPane.showMessageDialog(null, "Please Enter Correct Date.","Alert",JOptionPane.WARNING_MESSAGE);
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please Enter Correct Date.","Alert",JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void DateReceivedCheck() {
        if (DateReceivedField.getText().equals("") == true) {
            DateReceivedField.setText("dd-MM-yyyy");
        }
        else if (Pattern.compile("^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-(20[0-9][0-9])$").matcher(DateReceivedField.getText()).matches()) {
        }
        else {
            JOptionPane.showMessageDialog(null, "Please Enter Correct Date.","Alert",JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void CalculateDaysFunction() {
        
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd MM yyyy");
        String date1 = DateReceivedField.getText().replace('-',' ');
        String date2 = DateCompletedField.getText().replace('-',' ');

        LocalDate LDdate1 = LocalDate.parse(date1, dtf);
        LocalDate LDdate2 = LocalDate.parse(date2, dtf);

        long daysBetween = ChronoUnit.DAYS.between(LDdate1, LDdate2);
        CompletedInDaysLabel.setText(daysBetween+" days");
    }
    
    private void clearInputs() {
        InwardRegisterNoField.setText("");
        FromField.setText("");
        DateReceivedField.setText("dd-MM-yyyy");
        SubjectField.setText("");
        DateCompletedField.setText("dd-MM-yyyy");
        CompletedInDaysLabel.setText("");
        FeedbackArea.setText("");
    }
    
    private void logFiles() throws IOException {
        FileHandler handler = new FileHandler("default.log", true);
 
        Logger logger = Logger.getLogger("tb");
        logger.addHandler(handler);
        logger.info("Initializing...");
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BranchUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BranchUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BranchUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BranchUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BranchUpdate().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton CalculateDays;
    private javax.swing.JLabel CompletedInDays;
    private javax.swing.JLabel CompletedInDaysLabel;
    private javax.swing.JLabel DateCompleted;
    private javax.swing.JTextField DateCompletedField;
    private javax.swing.JLabel DateReceived;
    private javax.swing.JTextField DateReceivedField;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JLabel Feedback;
    private javax.swing.JTextArea FeedbackArea;
    private javax.swing.JScrollPane FeedbackScroll;
    private javax.swing.JLabel From;
    private javax.swing.JTextField FromField;
    private javax.swing.JLabel InwardRegisterNo;
    private javax.swing.JTextField InwardRegisterNoField;
    private javax.swing.JLabel NewLetterHeading;
    private javax.swing.JPanel PanelBody;
    private javax.swing.JPanel PanelFooter;
    private javax.swing.JPanel PanelHeader;
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton ShowTodayCompleted;
    private javax.swing.JButton ShowTodayReceived;
    private javax.swing.JLabel Subject;
    private javax.swing.JTextField SubjectField;
    private javax.swing.JButton UpdateButton;
    // End of variables declaration//GEN-END:variables

    
}
