package tb;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class BranchAcknowledgement extends javax.swing.JFrame {

    public BranchAcknowledgement() {
        setFrame();
        initComponents();
        DisplayTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HeadingPanel = new javax.swing.JPanel();
        NewLettersLabel = new javax.swing.JLabel();
        BodyPanel = new javax.swing.JPanel();
        AcknowledgementTableScrollPane = new javax.swing.JScrollPane();
        AcknowledgementTable = new javax.swing.JTable();
        FooterPanel = new javax.swing.JPanel();
        BackButton = new javax.swing.JButton();
        AcknowledgeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HeadingPanel.setBackground(new java.awt.Color(232, 246, 239));
        HeadingPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        NewLettersLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        NewLettersLabel.setText("New Letters");

        javax.swing.GroupLayout HeadingPanelLayout = new javax.swing.GroupLayout(HeadingPanel);
        HeadingPanel.setLayout(HeadingPanelLayout);
        HeadingPanelLayout.setHorizontalGroup(
            HeadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeadingPanelLayout.createSequentialGroup()
                .addContainerGap(400, Short.MAX_VALUE)
                .addComponent(NewLettersLabel)
                .addContainerGap(400, Short.MAX_VALUE))
        );
        HeadingPanelLayout.setVerticalGroup(
            HeadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeadingPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(NewLettersLabel)
                .addGap(20, 20, 20))
        );

        BodyPanel.setBackground(new java.awt.Color(232, 246, 239));
        BodyPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        BodyPanel.setPreferredSize(new java.awt.Dimension(900, 600));

        AcknowledgementTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Letter ID", "From", "Subject", "Acknowledge"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AcknowledgementTable.setColumnSelectionAllowed(true);
        AcknowledgementTable.getTableHeader().setReorderingAllowed(false);
        AcknowledgementTableScrollPane.setViewportView(AcknowledgementTable);
        AcknowledgementTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout BodyPanelLayout = new javax.swing.GroupLayout(BodyPanel);
        BodyPanel.setLayout(BodyPanelLayout);
        BodyPanelLayout.setHorizontalGroup(
            BodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BodyPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AcknowledgementTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BodyPanelLayout.setVerticalGroup(
            BodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BodyPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(AcknowledgementTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        FooterPanel.setBackground(new java.awt.Color(232, 246, 239));
        FooterPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        AcknowledgeButton.setText("Acknowledge Button");
        AcknowledgeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcknowledgeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FooterPanelLayout = new javax.swing.GroupLayout(FooterPanel);
        FooterPanel.setLayout(FooterPanelLayout);
        FooterPanelLayout.setHorizontalGroup(
            FooterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FooterPanelLayout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AcknowledgeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
        );
        FooterPanelLayout.setVerticalGroup(
            FooterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FooterPanelLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(FooterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AcknowledgeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HeadingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(FooterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(HeadingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(BodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(FooterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setFrame(){
        
        URL iconURL = getClass().getResource("/img-src/logo.png");
        // iconURL is null when not found
        ImageIcon icon = new ImageIcon(iconURL);
        setIconImage(icon.getImage());
        setTitle("Water Resources Department, Government of Maharashtra, India");
        setBounds(300, 125, 900, 600);
    }
    
    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new BranchHome().setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void AcknowledgeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcknowledgeButtonActionPerformed
        
//  letterArray
//      >>  CREATING AN EMPTY ARRAYLIST
        ArrayList<Integer> letterArray = new ArrayList<>();
        
//      >>  ENTERING THE CHECKED ACKNOWLEDGED LETTERS INTO THE EMPTY ARRAYLIST CREATED
        for(int i=0;i<AcknowledgementTable.getRowCount();i++) {
          Boolean checked=Boolean.valueOf(AcknowledgementTable.getValueAt(i, 3).toString());
          //DISPLAY
          if(checked) {
              String AcknowledgedLetterIDstring = AcknowledgementTable.getValueAt(i, 0).toString();
              int AcknowledgedLetterIDinteger = Integer.parseInt(AcknowledgedLetterIDstring);
              letterArray.add(AcknowledgedLetterIDinteger);
          }
        }
        
//  sqlQuery:
//      >>  (a, b, c, d) CREATING A STRING OF ARRAYLIST IN THIS FORMAT FOR THE SQL QUERY
        String sqlQuery = "'";
        for(int i = 0; i < letterArray.size(); i++) {
            sqlQuery = sqlQuery.concat(letterArray.get(i).toString());
            sqlQuery = sqlQuery.concat("','");
        }  
        sqlQuery = sqlQuery.substring(0, sqlQuery.length()-2);
        
//  date:
//      >>  GETTING TODAY'S DATE AND STORING IT IN DATE
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String date = LocalDate.now().format(formatter);
        
        try {
            
//          >>  1. ESTABLISHING CONNECTION WITH SQL DATABASE
            ConnectionEstablish con = new ConnectionEstablish();
            
//          >>  2. UPDATING THE ACKNOWLEDGEMENT TO 1 AND DATE RECEIVED FIELDS IN THE SQL DB  
            String sql = "UPDATE inwardregister SET Acknowledgement='1', "
                    + "eDateReceived='"+date+"' "
                    + "Progress = 'Incomplete' WHERE LetterID IN ("+sqlQuery+")";
            PreparedStatement st = con.c.prepareStatement(sql);

//          >>  3. IF THE QUERY IS EXECUTED THEN REFRESHING THE WINDOW  
            int i = st.executeUpdate();
            if (i > 0){
                JOptionPane.showMessageDialog(null, "Successfully Updated");
                this.setVisible(false);
                new BranchAcknowledgement().setVisible(true);
            }
            
        } catch (HeadlessException | SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_AcknowledgeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    private void DisplayTable() {
        
//      >>  CREATING DEFAULT TABLE MODEL -> {STRING, STRING, STRING, BOOLEAN}
        DefaultTableModel AcknowledgementTableModel  = new DefaultTableModel(){
            @Override
            public Class<?> getColumnClass(int column) {
                switch(column) {
                    case 0:
                        return String.class;
                    case 1:
                        return String.class;
                    case 2:
                        return String.class;
                    case 3:
                        return Boolean.class;
                    default:
                        return String.class;
                    
                }
            }
        
        };
        
//      >>  ADDING THE TABLE MODEL TO THE TABLE
        AcknowledgementTable.setModel(AcknowledgementTableModel);
        
//      >>  ADDING THE COLUMNS
        AcknowledgementTableModel.addColumn("Letter ID");
        AcknowledgementTableModel.addColumn("From");
        AcknowledgementTableModel.addColumn("Subject");
        AcknowledgementTableModel.addColumn("Acknowledge");
        
        
        try{
            
//          >>  READING THE BRANCH AND STORING IT IN BRANCH AND TOEMPLOYEE VARIABLES  
            BufferedReader br = new BufferedReader(new FileReader("login.txt"));
            String text = br.readLine();
//  branch:          
            String branch = text.split(",")[0];
//  toEmployee:          
            String toEmployee = text.split(",")[1];            
            
//          >>  1. ESTABLISHING CONNECTION WITH SQL DATABASE
            ConnectionEstablish con = new ConnectionEstablish();
            
//          >>  2. DISPLAYING PENDING/NEW LETTERS ASSIGNED TO THE EMPLOYEE
            String sql = "SELECT * FROM inwardregister WHERE "
                    + "Branch='"+branch+"' AND ToEmployee='"+toEmployee+"'"
                    + "AND Acknowledgement=0 ORDER BY cDateSent DESC";
            PreparedStatement st = con.c.prepareStatement(sql);
            ResultSet rs = st.executeQuery(sql);
            
//          >>  3. ENTERING THE VALUES IN THE TABLE
            int i=0;
            while(rs.next()){
                String LetterID = String.valueOf(rs.getInt("LetterID"));
                String From = rs.getString("Fr");
                String Subject = rs.getString("Subject");
                
//              >>  ADDING A ROW TO THE TABLE
                AcknowledgementTableModel.addRow(new Object[0]);
//              >>  model.setValueAt(string to display on table, row, column);
                AcknowledgementTableModel.setValueAt(LetterID, i, 0);
                AcknowledgementTableModel.setValueAt(From, i, 1);
                AcknowledgementTableModel.setValueAt(Subject, i, 2);
                AcknowledgementTableModel.setValueAt(false,i, 3);
                i = i + 1;
            }
            
        } catch (IOException | SQLException e) {
            e.printStackTrace();
        }
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BranchAcknowledgement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BranchAcknowledgement().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcknowledgeButton;
    private javax.swing.JTable AcknowledgementTable;
    private javax.swing.JScrollPane AcknowledgementTableScrollPane;
    private javax.swing.JButton BackButton;
    private javax.swing.JPanel BodyPanel;
    private javax.swing.JPanel FooterPanel;
    private javax.swing.JPanel HeadingPanel;
    private javax.swing.JLabel NewLettersLabel;
    // End of variables declaration//GEN-END:variables
}
