package tb;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Logger;
import java.util.logging.FileHandler;
import java.sql.PreparedStatement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import java.sql.*;
import java.time.temporal.ChronoUnit;
import java.util.Arrays;
import java.util.Scanner;
import java.util.regex.Pattern;
import javax.mail.internet.ParseException;

/**
 *
 * @author Lenovo
 */
public class BranchNewLetter extends javax.swing.JFrame {

    /**
     * Creates new form NewLetter
     */
    public BranchNewLetter() {
        try {
            logFiles();
        }
        catch(IOException e) {
            e.printStackTrace();
        }
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelHeader = new javax.swing.JPanel();
        NewLetterHeading = new javax.swing.JLabel();
        PanelBody = new javax.swing.JPanel();
        Subject = new javax.swing.JLabel();
        DateReceived = new javax.swing.JLabel();
        From = new javax.swing.JLabel();
        InwardRegisterNoField = new javax.swing.JTextField();
        DateReceivedField = new javax.swing.JTextField();
        FromField = new javax.swing.JTextField();
        ShowTodayReceived = new javax.swing.JButton();
        InwardRegisterNo = new javax.swing.JLabel();
        SubjectField = new javax.swing.JTextField();
        PanelFooter = new javax.swing.JPanel();
        InsertButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(100, 100, 700, 500));
        setResizable(false);
        setSize(new java.awt.Dimension(700, 500));

        PanelHeader.setBackground(new java.awt.Color(232, 246, 239));
        PanelHeader.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.lightGray));

        NewLetterHeading.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        NewLetterHeading.setForeground(new java.awt.Color(76, 76, 109));
        NewLetterHeading.setText("Insert New Letter Info");
        NewLetterHeading.setMaximumSize(new java.awt.Dimension(140, 32));
        NewLetterHeading.setMinimumSize(new java.awt.Dimension(140, 32));
        NewLetterHeading.setPreferredSize(new java.awt.Dimension(140, 32));

        javax.swing.GroupLayout PanelHeaderLayout = new javax.swing.GroupLayout(PanelHeader);
        PanelHeader.setLayout(PanelHeaderLayout);
        PanelHeaderLayout.setHorizontalGroup(
            PanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelHeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NewLetterHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelHeaderLayout.setVerticalGroup(
            PanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHeaderLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(NewLetterHeading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        PanelBody.setBackground(new java.awt.Color(232, 246, 239));
        PanelBody.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.lightGray));
        PanelBody.setPreferredSize(new java.awt.Dimension(700, 342));

        Subject.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Subject.setForeground(new java.awt.Color(76, 76, 109));
        Subject.setText("Subject");

        DateReceived.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        DateReceived.setForeground(new java.awt.Color(76, 76, 109));
        DateReceived.setText("Date Received");

        From.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        From.setForeground(new java.awt.Color(76, 76, 109));
        From.setText("From");

        DateReceivedField.setText("dd-MM-yyyy");
        DateReceivedField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DateReceivedFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DateReceivedFieldFocusLost(evt);
            }
        });
        DateReceivedField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DateReceivedFieldMouseClicked(evt);
            }
        });
        DateReceivedField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateReceivedFieldActionPerformed(evt);
            }
        });

        FromField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromFieldActionPerformed(evt);
            }
        });

        ShowTodayReceived.setBackground(new java.awt.Color(35, 62, 139));
        ShowTodayReceived.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        ShowTodayReceived.setForeground(new java.awt.Color(255, 255, 255));
        ShowTodayReceived.setText("Show Today");
        ShowTodayReceived.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowTodayReceivedActionPerformed(evt);
            }
        });

        InwardRegisterNo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        InwardRegisterNo.setForeground(new java.awt.Color(76, 76, 109));
        InwardRegisterNo.setText("Inward Register Number");

        SubjectField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubjectFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelBodyLayout = new javax.swing.GroupLayout(PanelBody);
        PanelBody.setLayout(PanelBodyLayout);
        PanelBodyLayout.setHorizontalGroup(
            PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBodyLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBodyLayout.createSequentialGroup()
                        .addComponent(From, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(FromField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelBodyLayout.createSequentialGroup()
                        .addComponent(InwardRegisterNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(InwardRegisterNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelBodyLayout.createSequentialGroup()
                        .addComponent(Subject, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SubjectField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelBodyLayout.createSequentialGroup()
                        .addComponent(DateReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DateReceivedField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ShowTodayReceived)))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        PanelBodyLayout.setVerticalGroup(
            PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBodyLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InwardRegisterNo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InwardRegisterNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(From, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Subject, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubjectField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateReceivedField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ShowTodayReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        PanelFooter.setBackground(new java.awt.Color(232, 246, 239));
        PanelFooter.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.lightGray));

        InsertButton.setBackground(new java.awt.Color(35, 62, 139));
        InsertButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        InsertButton.setForeground(new java.awt.Color(255, 255, 255));
        InsertButton.setText("Insert");
        InsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertButtonActionPerformed(evt);
            }
        });

        BackButton.setBackground(new java.awt.Color(35, 62, 139));
        BackButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        BackButton.setForeground(new java.awt.Color(255, 255, 255));
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelFooterLayout = new javax.swing.GroupLayout(PanelFooter);
        PanelFooter.setLayout(PanelFooterLayout);
        PanelFooterLayout.setHorizontalGroup(
            PanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFooterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(InsertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelFooterLayout.setVerticalGroup(
            PanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFooterLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(InsertButton))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelBody, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelFooter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PanelBody, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PanelFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FromFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FromFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FromFieldActionPerformed

    private void DateReceivedFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateReceivedFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateReceivedFieldActionPerformed

    private void ShowTodayReceivedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowTodayReceivedActionPerformed
        // TODO add your handling code here:
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String date = LocalDate.now().format(formatter);
        
        DateReceivedField.setText(date);
        
        DateReceivedCheck();
    }//GEN-LAST:event_ShowTodayReceivedActionPerformed

    private void InsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertButtonActionPerformed
        // TODO add your handling code here:
        
        try {
                File myObjRead = new File("filename.txt");
                Scanner myReader = new Scanner(myObjRead);
                while (myReader.hasNextLine()) {
                  String data = myReader.nextLine();
                  String[] dataArr = data.split(",");
                  String branch = dataArr[0];
                  String toEmployee = dataArr[1];
                }
                myReader.close();
            } catch (FileNotFoundException e) {
                System.out.println("An error occurred.");
                e.printStackTrace();
            }
        
        try {
            Thread.sleep(2 * 100);
        } catch (InterruptedException ex) {
          ex.printStackTrace();
        }
        
        try {
            ConnectionEstablish con = new ConnectionEstablish();
            String sql = "INSERT INTO BranchLetter"
                        + "(InwardRegisterNo, Fr, Subject, DateReceived,"
                        + "Branch, toEmployee, Acknowledgement) "
                        + "values(?, ?, ?, ?, ?, ?, ?)";
                        PreparedStatement st = con.c.prepareStatement(sql);
                        
                        
                        try {
                            File myObjRead = new File("filename.txt");
                            Scanner myReader = new Scanner(myObjRead);
                            while (myReader.hasNextLine()) {
                              String data = myReader.nextLine();
                              String[] dataArr = data.split(",");
                              String branch = dataArr[0];
                              String toEmployee = dataArr[1];
                              
                              
                            st.setString(1, InwardRegisterNoField.getText());
                            st.setString(2, FromField.getText());
                            st.setString(3, SubjectField.getText());
                            st.setString(4, DateReceivedField.getText());
                            st.setString(5, branch);
                            st.setString(6, toEmployee);
                            st.setString(7, String.valueOf(1));
                              
                            }
                            myReader.close();
                        } catch (FileNotFoundException e) {
                            System.out.println("An error occurred.");
                            e.printStackTrace();
                        }
                        
                        
//                        st.setString(1, InwardRegisterNoField.getText());
//                        st.setString(2, FromField.getText());
//                        st.setString(3, SubjectField.getText());
//                        st.setString(4, DateReceivedField.getText());
//                        st.setString(5, branch);
//                        st.setString(6, toEmployee);
                        


                        int i = st.executeUpdate();
                        if (i > 0){
                            JOptionPane.showMessageDialog(null, "Successfully Created");
                        }

                        InwardRegisterNoField.setText("");
                        FromField.setText("");
                        DateReceivedField.setText("dd-MM-YYYY");      
                        SubjectField.setText(""); 
                        
//        } catch(SQLException esql){
//            esql.printStackTrace();
//            JOptionPane.showMessageDialog(null, "Please Enter Inward Register Number.");
        } catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_InsertButtonActionPerformed

    private void DateReceivedFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateReceivedFieldFocusGained
        // TODO add your handling code here:
        if (DateReceivedField.getText().equals("dd-MM-yyyy") == true) {
            DateReceivedField.setText("");
        }
        
    }//GEN-LAST:event_DateReceivedFieldFocusGained

    private void DateReceivedFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DateReceivedFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DateReceivedFieldMouseClicked

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);  
        new BranchHome().setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void DateReceivedFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateReceivedFieldFocusLost
        // TODO add your handling code here:
        DateReceivedCheck();
    }//GEN-LAST:event_DateReceivedFieldFocusLost

    private void SubjectFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubjectFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SubjectFieldActionPerformed

    /**
     * @param args the command line arguments
     */

    
    private void DateReceivedCheck() {
        if (DateReceivedField.getText().equals("") == true) {
            DateReceivedField.setText("dd-MM-yyyy");
        }
        else if (Pattern.compile("^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-(20[0-9][0-9])$").matcher(DateReceivedField.getText()).matches()) {
        }
        else {
            JOptionPane.showMessageDialog(null, "Please Enter Correct Date.","Alert",JOptionPane.WARNING_MESSAGE);
        }
    }
    
    
    
    private void logFiles() throws IOException {
        FileHandler handler = new FileHandler("default.log", true);
 
        Logger logger = Logger.getLogger("tb");
        logger.addHandler(handler);
        logger.info("Initializing...");
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BranchNewLetter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BranchNewLetter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BranchNewLetter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BranchNewLetter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BranchNewLetter().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel DateReceived;
    private javax.swing.JTextField DateReceivedField;
    private javax.swing.JLabel From;
    private javax.swing.JTextField FromField;
    private javax.swing.JButton InsertButton;
    private javax.swing.JLabel InwardRegisterNo;
    private javax.swing.JTextField InwardRegisterNoField;
    private javax.swing.JLabel NewLetterHeading;
    private javax.swing.JPanel PanelBody;
    private javax.swing.JPanel PanelFooter;
    private javax.swing.JPanel PanelHeader;
    private javax.swing.JButton ShowTodayReceived;
    private javax.swing.JLabel Subject;
    private javax.swing.JTextField SubjectField;
    // End of variables declaration//GEN-END:variables

    
}
