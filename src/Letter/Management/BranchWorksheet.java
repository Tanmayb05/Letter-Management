package Letter.Management;

import static Letter.Management.ClerkLogin.setUIFont;
import java.awt.Dimension;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
/**
 *
 * @author Lenovo
 */
public class BranchWorksheet extends javax.swing.JFrame {

    /**
     * Creates new form BranchWorksheet
     */
    public BranchWorksheet() {
        initComponents();
        initFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddLetterPanel = new javax.swing.JPanel();
        AddLetterFormPanel = new javax.swing.JPanel();
        InwardRegisterNumberPanel = new javax.swing.JPanel();
        InwardRegisterNoLabel = new javax.swing.JLabel();
        InwardRegsiterNumberField = new javax.swing.JLabel();
        FromPanel = new javax.swing.JPanel();
        FromLetterNoLabel = new javax.swing.JLabel();
        FromLetterNoField = new javax.swing.JTextField();
        FromDateLabel = new javax.swing.JLabel();
        FromDateField = new javax.swing.JTextField();
        FromNameLabel = new javax.swing.JLabel();
        DateSentShowTodayButton = new javax.swing.JButton();
        FromNameComboBox = new javax.swing.JComboBox<>();
        FromNameField = new javax.swing.JTextField();
        ToDateReceivedLabel2 = new javax.swing.JLabel();
        SubjectPanel = new javax.swing.JPanel();
        SubjectLabel = new javax.swing.JLabel();
        SubjectField = new javax.swing.JTextField();
        ToPanel = new javax.swing.JPanel();
        ToNameLabel = new javax.swing.JLabel();
        ToBranchLabel = new javax.swing.JLabel();
        ToDateReceivedLabel = new javax.swing.JLabel();
        ToDateReceivedField = new javax.swing.JTextField();
        DateReceivedShowTodayButton = new javax.swing.JButton();
        ToDateReceivedLabel1 = new javax.swing.JLabel();
        ToBranchComboBox = new javax.swing.JComboBox<>();
        ToNameComboBox = new javax.swing.JComboBox<>();
        ActionButtonsPanel = new javax.swing.JPanel();
        SignoutButton = new javax.swing.JButton();
        AddLetterButton = new javax.swing.JButton();
        ShowRegisterButton = new javax.swing.JButton();
        EmployeeStatsButton = new javax.swing.JButton();
        ShowButton = new javax.swing.JButton();
        ShowRegisterPanel = new javax.swing.JPanel();
        ShowRegisterSortByLabel = new javax.swing.JLabel();
        ShowRegisterSortByComboBox = new javax.swing.JComboBox<>();
        EmployeeStatsOptions = new javax.swing.JPanel();
        NameEmployeeStatsComboBox = new javax.swing.JComboBox<>();
        BranchEmployeeStatsComboBox = new javax.swing.JComboBox<>();
        SortByEmployeeStatsLabel = new javax.swing.JLabel();
        SortByEmployeeStatsComboBox = new javax.swing.JComboBox<>();
        EmployeeStatsFilterPeriodPanel = new javax.swing.JPanel();
        FromPeriodLabel = new javax.swing.JLabel();
        FromPeriodField = new javax.swing.JTextField();
        ToPeriodField = new javax.swing.JTextField();
        ToPeriodLabel = new javax.swing.JLabel();
        TablePanel = new javax.swing.JPanel();
        TablesPane = new javax.swing.JTabbedPane();
        ShowDirectoryScrollPane = new javax.swing.JScrollPane();
        ShowRegisterTable = new javax.swing.JTable();
        EmployeeStatsPane = new javax.swing.JPanel();
        EmployeeStatsScrollPane = new javax.swing.JScrollPane();
        EmployeeStatsTable = new javax.swing.JTable();
        TasksScrollPane = new javax.swing.JScrollPane();
        TasksTable = new javax.swing.JTable();
        TablePanel1 = new javax.swing.JPanel();
        WorksheetPanel = new javax.swing.JPanel();
        WorksheetScrollPane = new javax.swing.JScrollPane();
        WorksheetTable = new javax.swing.JTable();
        NewLettersPanel = new javax.swing.JPanel();
        NewReceivedLettersLabel = new javax.swing.JLabel();
        NewReceivedLettersTablePanel = new javax.swing.JPanel();
        NewReceivedLettersTableScroll = new javax.swing.JScrollPane();
        NewReceivedLettersTable = new javax.swing.JTable();
        AddLetterPanel1 = new javax.swing.JPanel();
        AddLetterFormPanel1 = new javax.swing.JPanel();
        InwardRegisterNumberPanel1 = new javax.swing.JPanel();
        InwardRegisterNoLabel1 = new javax.swing.JLabel();
        InwardRegisterNoField = new javax.swing.JTextField();
        ShowLetterInfoButton = new javax.swing.JButton();
        FromPanel1 = new javax.swing.JPanel();
        FromDateLabel1 = new javax.swing.JLabel();
        FromNameLabel1 = new javax.swing.JLabel();
        FromLabel1 = new javax.swing.JLabel();
        FromNumberLabel1 = new javax.swing.JLabel();
        FromDateField1 = new javax.swing.JLabel();
        FromNumberField1 = new javax.swing.JLabel();
        FromNameField1 = new javax.swing.JLabel();
        SubjectPanel1 = new javax.swing.JPanel();
        SubjectLabel1 = new javax.swing.JLabel();
        SubjectField1 = new javax.swing.JLabel();
        ToPanel1 = new javax.swing.JPanel();
        ToDateReceivedLabel3 = new javax.swing.JLabel();
        ToDatReceivedField1 = new javax.swing.JLabel();
        RemarkPanel = new javax.swing.JPanel();
        RemarkLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        RemarkTextArea = new javax.swing.JTextArea();
        ActionButtonsPanel1 = new javax.swing.JPanel();
        SignoutButton1 = new javax.swing.JButton();
        AcknowledgeButton = new javax.swing.JButton();
        ShowButton1 = new javax.swing.JButton();
        CompleteButton = new javax.swing.JButton();
        RefreshShowRegisterButton = new javax.swing.JButton();
        EmployeeStatsOptions1 = new javax.swing.JPanel();
        SortByEmployeeStatsLabel1 = new javax.swing.JLabel();
        SortByEmployeeStatsComboBox1 = new javax.swing.JComboBox<>();
        ShowRegisterSortByLabel1 = new javax.swing.JLabel();
        WorksheetSortComboBox = new javax.swing.JComboBox<>();
        updownArrowToggleButton = new javax.swing.JToggleButton();
        EmployeeStatsFilterPeriodPanel1 = new javax.swing.JPanel();
        FromPeriodLabel1 = new javax.swing.JLabel();
        FromPeriodField1 = new javax.swing.JTextField();
        ToPeriodField1 = new javax.swing.JTextField();
        ToPeriodLabel1 = new javax.swing.JLabel();
        HeaderPanel = new javax.swing.JPanel();
        HeadingPanel = new javax.swing.JPanel();
        HeadingLabel = new javax.swing.JLabel();

        AddLetterPanel.setBackground(new java.awt.Color(225, 250, 225));
        AddLetterPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        InwardRegisterNumberPanel.setBackground(new java.awt.Color(147, 217, 163));
        InwardRegisterNumberPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        InwardRegisterNoLabel.setBackground(new java.awt.Color(102, 255, 102));
        InwardRegisterNoLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        InwardRegisterNoLabel.setText("Inward Register Number ");

        InwardRegsiterNumberField.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        InwardRegsiterNumberField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        InwardRegsiterNumberField.setText("00");
        InwardRegsiterNumberField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout InwardRegisterNumberPanelLayout = new javax.swing.GroupLayout(InwardRegisterNumberPanel);
        InwardRegisterNumberPanel.setLayout(InwardRegisterNumberPanelLayout);
        InwardRegisterNumberPanelLayout.setHorizontalGroup(
            InwardRegisterNumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InwardRegisterNumberPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InwardRegisterNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InwardRegsiterNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        InwardRegisterNumberPanelLayout.setVerticalGroup(
            InwardRegisterNumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InwardRegisterNumberPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(InwardRegisterNumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InwardRegisterNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InwardRegsiterNumberField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );

        FromPanel.setBackground(new java.awt.Color(147, 217, 163));
        FromPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        FromLetterNoLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromLetterNoLabel.setText("Number");
        FromLetterNoLabel.setToolTipText("From Number");
        FromLetterNoLabel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        FromLetterNoLabel.setMinimumSize(new java.awt.Dimension(100, 30));
        FromLetterNoLabel.setPreferredSize(new java.awt.Dimension(100, 30));

        FromLetterNoField.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromLetterNoField.setText("Number");
        FromLetterNoField.setToolTipText("From Number");
        FromLetterNoField.setMinimumSize(new java.awt.Dimension(150, 30));
        FromLetterNoField.setPreferredSize(new java.awt.Dimension(150, 30));

        FromDateLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromDateLabel.setText("Date Sent");
        FromDateLabel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        FromDateLabel.setMinimumSize(new java.awt.Dimension(100, 30));
        FromDateLabel.setPreferredSize(new java.awt.Dimension(100, 30));

        FromDateField.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromDateField.setMinimumSize(new java.awt.Dimension(150, 30));
        FromDateField.setPreferredSize(new java.awt.Dimension(150, 30));

        FromNameLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromNameLabel.setText("Name");
        FromNameLabel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        FromNameLabel.setMinimumSize(new java.awt.Dimension(100, 30));
        FromNameLabel.setPreferredSize(new java.awt.Dimension(100, 30));

        DateSentShowTodayButton.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        DateSentShowTodayButton.setText("Today");
        DateSentShowTodayButton.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        DateSentShowTodayButton.setMinimumSize(new java.awt.Dimension(80, 34));
        DateSentShowTodayButton.setPreferredSize(new java.awt.Dimension(80, 34));
        DateSentShowTodayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateSentShowTodayButtonActionPerformed(evt);
            }
        });

        FromNameComboBox.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromNameComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Name" }));
        FromNameComboBox.setMinimumSize(new java.awt.Dimension(196, 32));
        FromNameComboBox.setPreferredSize(new java.awt.Dimension(196, 32));
        FromNameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromNameComboBoxActionPerformed(evt);
            }
        });

        FromNameField.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromNameField.setDragEnabled(true);
        FromNameField.setMargin(new java.awt.Insets(1, 1, 1, 1));
        FromNameField.setMinimumSize(new java.awt.Dimension(196, 34));
        FromNameField.setPreferredSize(new java.awt.Dimension(196, 34));

        ToDateReceivedLabel2.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ToDateReceivedLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ToDateReceivedLabel2.setText("FROM");
        ToDateReceivedLabel2.setMaximumSize(new java.awt.Dimension(100, 262626));
        ToDateReceivedLabel2.setMinimumSize(new java.awt.Dimension(100, 30));
        ToDateReceivedLabel2.setPreferredSize(new java.awt.Dimension(110, 30));

        javax.swing.GroupLayout FromPanelLayout = new javax.swing.GroupLayout(FromPanel);
        FromPanel.setLayout(FromPanelLayout);
        FromPanelLayout.setHorizontalGroup(
            FromPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FromPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ToDateReceivedLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(FromPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(FromDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(FromLetterNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FromPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(FromLetterNoField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FromDateField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FromNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FromPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FromPanelLayout.createSequentialGroup()
                        .addComponent(DateSentShowTodayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(FromNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addContainerGap())
        );
        FromPanelLayout.setVerticalGroup(
            FromPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FromPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FromPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ToDateReceivedLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FromPanelLayout.createSequentialGroup()
                        .addGroup(FromPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FromLetterNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FromLetterNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FromPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FromDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FromDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DateSentShowTodayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FromPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FromNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FromNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FromNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        SubjectPanel.setBackground(new java.awt.Color(147, 217, 163));
        SubjectPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        SubjectPanel.setMinimumSize(new java.awt.Dimension(340, 48));

        SubjectLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        SubjectLabel.setText("Subject");

        SubjectField.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N

        javax.swing.GroupLayout SubjectPanelLayout = new javax.swing.GroupLayout(SubjectPanel);
        SubjectPanel.setLayout(SubjectPanelLayout);
        SubjectPanelLayout.setHorizontalGroup(
            SubjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SubjectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubjectField, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        SubjectPanelLayout.setVerticalGroup(
            SubjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SubjectPanelLayout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(SubjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubjectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubjectField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        ToPanel.setBackground(new java.awt.Color(147, 217, 163));
        ToPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ToNameLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ToNameLabel.setText("Name");
        ToNameLabel.setMinimumSize(new java.awt.Dimension(100, 30));
        ToNameLabel.setPreferredSize(new java.awt.Dimension(110, 30));

        ToBranchLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ToBranchLabel.setText("Branch");
        ToBranchLabel.setMinimumSize(new java.awt.Dimension(100, 30));
        ToBranchLabel.setPreferredSize(new java.awt.Dimension(110, 30));

        ToDateReceivedLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ToDateReceivedLabel.setText("Date Received");
        ToDateReceivedLabel.setMaximumSize(new java.awt.Dimension(100, 262626));
        ToDateReceivedLabel.setMinimumSize(new java.awt.Dimension(100, 30));
        ToDateReceivedLabel.setPreferredSize(new java.awt.Dimension(110, 30));

        ToDateReceivedField.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ToDateReceivedField.setMinimumSize(new java.awt.Dimension(150, 30));
        ToDateReceivedField.setName(""); // NOI18N
        ToDateReceivedField.setPreferredSize(new java.awt.Dimension(150, 30));

        DateReceivedShowTodayButton.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        DateReceivedShowTodayButton.setText("Today");
        DateReceivedShowTodayButton.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        DateReceivedShowTodayButton.setMinimumSize(new java.awt.Dimension(100, 30));
        DateReceivedShowTodayButton.setPreferredSize(new java.awt.Dimension(100, 30));
        DateReceivedShowTodayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateReceivedShowTodayButtonActionPerformed(evt);
            }
        });

        ToDateReceivedLabel1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ToDateReceivedLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ToDateReceivedLabel1.setText("TO");
        ToDateReceivedLabel1.setMaximumSize(new java.awt.Dimension(100, 262626));
        ToDateReceivedLabel1.setMinimumSize(new java.awt.Dimension(100, 30));
        ToDateReceivedLabel1.setPreferredSize(new java.awt.Dimension(110, 30));

        ToBranchComboBox.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ToBranchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Branch" }));
        ToBranchComboBox.setMinimumSize(new java.awt.Dimension(196, 32));
        ToBranchComboBox.setPreferredSize(new java.awt.Dimension(196, 32));
        ToBranchComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToBranchComboBoxActionPerformed(evt);
            }
        });

        ToNameComboBox.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ToNameComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Name" }));
        ToNameComboBox.setMinimumSize(new java.awt.Dimension(196, 32));
        ToNameComboBox.setPreferredSize(new java.awt.Dimension(196, 32));

        javax.swing.GroupLayout ToPanelLayout = new javax.swing.GroupLayout(ToPanel);
        ToPanel.setLayout(ToPanelLayout);
        ToPanelLayout.setHorizontalGroup(
            ToPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ToPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ToDateReceivedLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ToPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ToNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ToDateReceivedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ToBranchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ToPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ToPanelLayout.createSequentialGroup()
                        .addComponent(ToDateReceivedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DateReceivedShowTodayButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ToBranchComboBox, 0, 1, Short.MAX_VALUE)
                    .addComponent(ToNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        ToPanelLayout.setVerticalGroup(
            ToPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ToPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ToPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ToPanelLayout.createSequentialGroup()
                        .addGroup(ToPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ToDateReceivedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ToDateReceivedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DateReceivedShowTodayButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ToPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ToBranchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ToBranchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ToPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ToNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ToNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ToDateReceivedLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout AddLetterFormPanelLayout = new javax.swing.GroupLayout(AddLetterFormPanel);
        AddLetterFormPanel.setLayout(AddLetterFormPanelLayout);
        AddLetterFormPanelLayout.setHorizontalGroup(
            AddLetterFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLetterFormPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(AddLetterFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(SubjectPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(InwardRegisterNumberPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FromPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ToPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        AddLetterFormPanelLayout.setVerticalGroup(
            AddLetterFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLetterFormPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(InwardRegisterNumberPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FromPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(SubjectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(ToPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        ActionButtonsPanel.setBackground(new java.awt.Color(225, 250, 225));

        SignoutButton.setBackground(new java.awt.Color(255, 102, 102));
        SignoutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img-src/logout24.png"))); // NOI18N
        SignoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignoutButtonActionPerformed(evt);
            }
        });

        AddLetterButton.setBackground(new java.awt.Color(102, 255, 102));
        AddLetterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img-src/Add24.png"))); // NOI18N
        AddLetterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddLetterButtonActionPerformed(evt);
            }
        });

        ShowRegisterButton.setBackground(new java.awt.Color(204, 204, 204));
        ShowRegisterButton.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ShowRegisterButton.setText("Show Register");
        ShowRegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowRegisterButtonActionPerformed(evt);
            }
        });

        EmployeeStatsButton.setBackground(new java.awt.Color(204, 204, 204));
        EmployeeStatsButton.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        EmployeeStatsButton.setText("Employee Stats");
        EmployeeStatsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeStatsButtonActionPerformed(evt);
            }
        });

        ShowButton.setBackground(new java.awt.Color(255, 255, 255));
        ShowButton.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ShowButton.setText("Show");
        ShowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ActionButtonsPanelLayout = new javax.swing.GroupLayout(ActionButtonsPanel);
        ActionButtonsPanel.setLayout(ActionButtonsPanelLayout);
        ActionButtonsPanelLayout.setHorizontalGroup(
            ActionButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActionButtonsPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(SignoutButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddLetterButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ShowRegisterButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EmployeeStatsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ShowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        ActionButtonsPanelLayout.setVerticalGroup(
            ActionButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActionButtonsPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(ActionButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SignoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EmployeeStatsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ShowRegisterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AddLetterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ShowButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 2, Short.MAX_VALUE))
        );

        ShowRegisterPanel.setBackground(new java.awt.Color(225, 250, 225));

        ShowRegisterSortByLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ShowRegisterSortByLabel.setText("Sort by");

        ShowRegisterSortByComboBox.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ShowRegisterSortByComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout ShowRegisterPanelLayout = new javax.swing.GroupLayout(ShowRegisterPanel);
        ShowRegisterPanel.setLayout(ShowRegisterPanelLayout);
        ShowRegisterPanelLayout.setHorizontalGroup(
            ShowRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowRegisterPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(ShowRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ShowRegisterSortByComboBox, 0, 179, Short.MAX_VALUE)
                    .addComponent(ShowRegisterSortByLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ShowRegisterPanelLayout.setVerticalGroup(
            ShowRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowRegisterPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(ShowRegisterSortByLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ShowRegisterSortByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        EmployeeStatsOptions.setBackground(new java.awt.Color(225, 250, 225));

        NameEmployeeStatsComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        NameEmployeeStatsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Name" }));
        NameEmployeeStatsComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                NameEmployeeStatsComboBoxItemStateChanged(evt);
            }
        });

        BranchEmployeeStatsComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        BranchEmployeeStatsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Branch" }));
        BranchEmployeeStatsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BranchEmployeeStatsComboBoxActionPerformed(evt);
            }
        });

        SortByEmployeeStatsLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        SortByEmployeeStatsLabel.setText("Filter");

        SortByEmployeeStatsComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        SortByEmployeeStatsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout EmployeeStatsOptionsLayout = new javax.swing.GroupLayout(EmployeeStatsOptions);
        EmployeeStatsOptions.setLayout(EmployeeStatsOptionsLayout);
        EmployeeStatsOptionsLayout.setHorizontalGroup(
            EmployeeStatsOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeeStatsOptionsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SortByEmployeeStatsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SortByEmployeeStatsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmployeeStatsOptionsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(EmployeeStatsOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BranchEmployeeStatsComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameEmployeeStatsComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        EmployeeStatsOptionsLayout.setVerticalGroup(
            EmployeeStatsOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeeStatsOptionsLayout.createSequentialGroup()
                .addComponent(BranchEmployeeStatsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NameEmployeeStatsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EmployeeStatsOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SortByEmployeeStatsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SortByEmployeeStatsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        EmployeeStatsFilterPeriodPanel.setBackground(new java.awt.Color(225, 250, 225));

        FromPeriodLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        FromPeriodLabel.setText("From");

        FromPeriodField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        FromPeriodField.setMinimumSize(new java.awt.Dimension(110, 30));
        FromPeriodField.setPreferredSize(new java.awt.Dimension(110, 30));

        ToPeriodField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        ToPeriodField.setMinimumSize(new java.awt.Dimension(110, 30));
        ToPeriodField.setPreferredSize(new java.awt.Dimension(110, 30));

        ToPeriodLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        ToPeriodLabel.setText("To");

        javax.swing.GroupLayout EmployeeStatsFilterPeriodPanelLayout = new javax.swing.GroupLayout(EmployeeStatsFilterPeriodPanel);
        EmployeeStatsFilterPeriodPanel.setLayout(EmployeeStatsFilterPeriodPanelLayout);
        EmployeeStatsFilterPeriodPanelLayout.setHorizontalGroup(
            EmployeeStatsFilterPeriodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeeStatsFilterPeriodPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(FromPeriodLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(FromPeriodField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(ToPeriodLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(ToPeriodField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        EmployeeStatsFilterPeriodPanelLayout.setVerticalGroup(
            EmployeeStatsFilterPeriodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmployeeStatsFilterPeriodPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(EmployeeStatsFilterPeriodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FromPeriodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromPeriodField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToPeriodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToPeriodField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout AddLetterPanelLayout = new javax.swing.GroupLayout(AddLetterPanel);
        AddLetterPanel.setLayout(AddLetterPanelLayout);
        AddLetterPanelLayout.setHorizontalGroup(
            AddLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddLetterPanelLayout.createSequentialGroup()
                .addGroup(AddLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AddLetterPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EmployeeStatsFilterPeriodPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddLetterPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(AddLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(AddLetterPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(AddLetterFormPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddLetterPanelLayout.createSequentialGroup()
                                .addComponent(ShowRegisterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(EmployeeStatsOptions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(ActionButtonsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(25, 25, 25))
        );
        AddLetterPanelLayout.setVerticalGroup(
            AddLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddLetterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddLetterFormPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ActionButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ShowRegisterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmployeeStatsOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmployeeStatsFilterPeriodPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TablePanel.setBackground(new java.awt.Color(225, 250, 225));
        TablePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        TablesPane.setBackground(new java.awt.Color(147, 217, 163));
        TablesPane.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        TablesPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TablesPane.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        TablesPane.setOpaque(true);

        ShowRegisterTable.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        ShowRegisterTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Inward Register", "Worksheet No", "From - Number", "From - Date", "From - Name", "Subject", "To - Date", "To - Branch", "To - Name", "Out Date", "Remark", "Progress"
            }
        ));
        ShowRegisterTable.setFillsViewportHeight(true);
        ShowRegisterTable.setInheritsPopupMenu(true);
        ShowRegisterTable.setRowHeight(25);
        ShowRegisterTable.setShowGrid(true);
        ShowRegisterTable.getTableHeader().setReorderingAllowed(false);
        ShowRegisterTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShowRegisterTableMouseClicked(evt);
            }
        });
        ShowDirectoryScrollPane.setViewportView(ShowRegisterTable);

        TablesPane.addTab("Show Register", ShowDirectoryScrollPane);

        EmployeeStatsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        EmployeeStatsTable.setRowHeight(25);
        EmployeeStatsScrollPane.setViewportView(EmployeeStatsTable);

        TasksTable.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        TasksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "Name", "Email", "Pending Letters", "Completed Letters", "Total Letters"
            }
        ));
        TasksTable.setRowHeight(25);
        TasksScrollPane.setViewportView(TasksTable);

        javax.swing.GroupLayout EmployeeStatsPaneLayout = new javax.swing.GroupLayout(EmployeeStatsPane);
        EmployeeStatsPane.setLayout(EmployeeStatsPaneLayout);
        EmployeeStatsPaneLayout.setHorizontalGroup(
            EmployeeStatsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeeStatsPaneLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(EmployeeStatsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EmployeeStatsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                    .addComponent(TasksScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        EmployeeStatsPaneLayout.setVerticalGroup(
            EmployeeStatsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeeStatsPaneLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(EmployeeStatsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(TasksScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        TablesPane.addTab("Employee Stats", EmployeeStatsPane);

        javax.swing.GroupLayout TablePanelLayout = new javax.swing.GroupLayout(TablePanel);
        TablePanel.setLayout(TablePanelLayout);
        TablePanelLayout.setHorizontalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(TablesPane, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        TablePanelLayout.setVerticalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(TablesPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TablePanel1.setBackground(new java.awt.Color(225, 250, 225));
        TablePanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        WorksheetPanel.setBackground(new java.awt.Color(225, 250, 225));

        WorksheetScrollPane.setBackground(new java.awt.Color(102, 255, 102));

        WorksheetTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "क्रमांक", "कार्यपत्र", "पत्र क्रमांक", "आवक दिनांक", "कोणाकडून आले ", "विषय", "पाठवल्याचा दिनांक", "जावक दिनांक", "टिपणी", "प्रगती"
            }
        ));
        WorksheetScrollPane.setViewportView(WorksheetTable);

        javax.swing.GroupLayout WorksheetPanelLayout = new javax.swing.GroupLayout(WorksheetPanel);
        WorksheetPanel.setLayout(WorksheetPanelLayout);
        WorksheetPanelLayout.setHorizontalGroup(
            WorksheetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WorksheetPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(WorksheetScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        WorksheetPanelLayout.setVerticalGroup(
            WorksheetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WorksheetPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WorksheetScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        NewLettersPanel.setBackground(new java.awt.Color(225, 250, 225));

        NewReceivedLettersLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        NewReceivedLettersLabel.setText("नवीन आलेले पत्र");

        NewReceivedLettersTablePanel.setBackground(new java.awt.Color(102, 255, 102));

        NewReceivedLettersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "क्रमांक", "पत्र क्रमांक", "आवक दिनांक", "कोणाकडून आले", "विषय", "पाठवल्याचा दिनांक", "प्रगती"
            }
        ));
        NewReceivedLettersTableScroll.setViewportView(NewReceivedLettersTable);

        javax.swing.GroupLayout NewReceivedLettersTablePanelLayout = new javax.swing.GroupLayout(NewReceivedLettersTablePanel);
        NewReceivedLettersTablePanel.setLayout(NewReceivedLettersTablePanelLayout);
        NewReceivedLettersTablePanelLayout.setHorizontalGroup(
            NewReceivedLettersTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NewReceivedLettersTableScroll)
        );
        NewReceivedLettersTablePanelLayout.setVerticalGroup(
            NewReceivedLettersTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NewReceivedLettersTableScroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout NewLettersPanelLayout = new javax.swing.GroupLayout(NewLettersPanel);
        NewLettersPanel.setLayout(NewLettersPanelLayout);
        NewLettersPanelLayout.setHorizontalGroup(
            NewLettersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewLettersPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NewReceivedLettersLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(NewLettersPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(NewReceivedLettersTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        NewLettersPanelLayout.setVerticalGroup(
            NewLettersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewLettersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NewReceivedLettersLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NewReceivedLettersTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout TablePanel1Layout = new javax.swing.GroupLayout(TablePanel1);
        TablePanel1.setLayout(TablePanel1Layout);
        TablePanel1Layout.setHorizontalGroup(
            TablePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(WorksheetPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(NewLettersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        TablePanel1Layout.setVerticalGroup(
            TablePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanel1Layout.createSequentialGroup()
                .addComponent(WorksheetPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NewLettersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        AddLetterPanel1.setBackground(new java.awt.Color(225, 250, 225));
        AddLetterPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        InwardRegisterNumberPanel1.setBackground(new java.awt.Color(147, 217, 163));
        InwardRegisterNumberPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        InwardRegisterNoLabel1.setBackground(new java.awt.Color(102, 255, 102));
        InwardRegisterNoLabel1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        InwardRegisterNoLabel1.setText("कार्यालयीन क्रमांक");

        ShowLetterInfoButton.setText("दाखवा");
        ShowLetterInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowLetterInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InwardRegisterNumberPanel1Layout = new javax.swing.GroupLayout(InwardRegisterNumberPanel1);
        InwardRegisterNumberPanel1.setLayout(InwardRegisterNumberPanel1Layout);
        InwardRegisterNumberPanel1Layout.setHorizontalGroup(
            InwardRegisterNumberPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InwardRegisterNumberPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InwardRegisterNoLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(InwardRegisterNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ShowLetterInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        InwardRegisterNumberPanel1Layout.setVerticalGroup(
            InwardRegisterNumberPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InwardRegisterNumberPanel1Layout.createSequentialGroup()
                .addGroup(InwardRegisterNumberPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(InwardRegisterNumberPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ShowLetterInfoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addGroup(InwardRegisterNumberPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(InwardRegisterNumberPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InwardRegisterNoLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InwardRegisterNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(4, 4, 4))
        );

        FromPanel1.setBackground(new java.awt.Color(147, 217, 163));
        FromPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        FromDateLabel1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromDateLabel1.setText("आवक दिनांक");
        FromDateLabel1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        FromDateLabel1.setMinimumSize(new java.awt.Dimension(100, 30));
        FromDateLabel1.setPreferredSize(new java.awt.Dimension(100, 30));

        FromNameLabel1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromNameLabel1.setText("कोणाकडून आले");
        FromNameLabel1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        FromNameLabel1.setMinimumSize(new java.awt.Dimension(100, 30));
        FromNameLabel1.setPreferredSize(new java.awt.Dimension(100, 30));

        FromLabel1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        FromLabel1.setText("आवक");
        FromLabel1.setMaximumSize(new java.awt.Dimension(100, 262626));
        FromLabel1.setMinimumSize(new java.awt.Dimension(100, 30));
        FromLabel1.setPreferredSize(new java.awt.Dimension(110, 30));

        FromNumberLabel1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromNumberLabel1.setText("पत्र क्रमांक");
        FromNumberLabel1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        FromNumberLabel1.setMinimumSize(new java.awt.Dimension(100, 30));
        FromNumberLabel1.setPreferredSize(new java.awt.Dimension(100, 30));

        FromDateField1.setBackground(new java.awt.Color(220, 219, 219));
        FromDateField1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromDateField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        FromDateField1.setOpaque(true);

        FromNumberField1.setBackground(new java.awt.Color(220, 219, 219));
        FromNumberField1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromNumberField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        FromNumberField1.setOpaque(true);

        FromNameField1.setBackground(new java.awt.Color(220, 219, 219));
        FromNameField1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        FromNameField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        FromNameField1.setOpaque(true);

        javax.swing.GroupLayout FromPanel1Layout = new javax.swing.GroupLayout(FromPanel1);
        FromPanel1.setLayout(FromPanel1Layout);
        FromPanel1Layout.setHorizontalGroup(
            FromPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FromPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FromLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FromPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FromPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(FromDateLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(FromNumberLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(FromNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FromPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FromDateField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromNameField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromNumberField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FromPanel1Layout.setVerticalGroup(
            FromPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FromPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FromPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(FromLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FromPanel1Layout.createSequentialGroup()
                        .addGroup(FromPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FromNumberLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FromNumberField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FromPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FromPanel1Layout.createSequentialGroup()
                                .addGroup(FromPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(FromDateLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FromDateField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FromNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(FromNameField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        SubjectPanel1.setBackground(new java.awt.Color(147, 217, 163));
        SubjectPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        SubjectPanel1.setMinimumSize(new java.awt.Dimension(340, 48));

        SubjectLabel1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        SubjectLabel1.setText("विषय");

        SubjectField1.setBackground(new java.awt.Color(220, 219, 219));
        SubjectField1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        SubjectField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SubjectField1.setOpaque(true);

        javax.swing.GroupLayout SubjectPanel1Layout = new javax.swing.GroupLayout(SubjectPanel1);
        SubjectPanel1.setLayout(SubjectPanel1Layout);
        SubjectPanel1Layout.setHorizontalGroup(
            SubjectPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(SubjectLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(SubjectField1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SubjectPanel1Layout.setVerticalGroup(
            SubjectPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SubjectPanel1Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(SubjectPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SubjectField1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubjectLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        ToPanel1.setBackground(new java.awt.Color(147, 217, 163));
        ToPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ToDateReceivedLabel3.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ToDateReceivedLabel3.setText("पाठवल्याचा दिनांक");
        ToDateReceivedLabel3.setMaximumSize(new java.awt.Dimension(100, 262626));
        ToDateReceivedLabel3.setMinimumSize(new java.awt.Dimension(100, 30));
        ToDateReceivedLabel3.setPreferredSize(new java.awt.Dimension(110, 30));

        ToDatReceivedField1.setBackground(new java.awt.Color(220, 219, 219));
        ToDatReceivedField1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ToDatReceivedField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ToDatReceivedField1.setOpaque(true);

        RemarkPanel.setBackground(new java.awt.Color(147, 217, 163));

        RemarkLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        RemarkLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        RemarkLabel.setText("शेरा");
        RemarkLabel.setMaximumSize(new java.awt.Dimension(100, 262626));
        RemarkLabel.setMinimumSize(new java.awt.Dimension(100, 30));
        RemarkLabel.setPreferredSize(new java.awt.Dimension(110, 30));

        RemarkTextArea.setColumns(20);
        RemarkTextArea.setRows(5);
        jScrollPane1.setViewportView(RemarkTextArea);

        javax.swing.GroupLayout RemarkPanelLayout = new javax.swing.GroupLayout(RemarkPanel);
        RemarkPanel.setLayout(RemarkPanelLayout);
        RemarkPanelLayout.setHorizontalGroup(
            RemarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemarkPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(RemarkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        RemarkPanelLayout.setVerticalGroup(
            RemarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemarkPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RemarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(RemarkPanelLayout.createSequentialGroup()
                        .addComponent(RemarkLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(59, 59, 59))))
        );

        javax.swing.GroupLayout ToPanel1Layout = new javax.swing.GroupLayout(ToPanel1);
        ToPanel1.setLayout(ToPanel1Layout);
        ToPanel1Layout.setHorizontalGroup(
            ToPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ToPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ToPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RemarkPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(ToPanel1Layout.createSequentialGroup()
                        .addComponent(ToDateReceivedLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ToDatReceivedField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );
        ToPanel1Layout.setVerticalGroup(
            ToPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ToPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ToPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ToDatReceivedField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ToDateReceivedLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RemarkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout AddLetterFormPanel1Layout = new javax.swing.GroupLayout(AddLetterFormPanel1);
        AddLetterFormPanel1.setLayout(AddLetterFormPanel1Layout);
        AddLetterFormPanel1Layout.setHorizontalGroup(
            AddLetterFormPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddLetterFormPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(AddLetterFormPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(InwardRegisterNumberPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FromPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SubjectPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ToPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        AddLetterFormPanel1Layout.setVerticalGroup(
            AddLetterFormPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLetterFormPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(InwardRegisterNumberPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(FromPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(SubjectPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(ToPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ActionButtonsPanel1.setBackground(new java.awt.Color(225, 250, 225));

        SignoutButton1.setBackground(new java.awt.Color(255, 102, 102));
        SignoutButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img-src/logout24.png"))); // NOI18N
        SignoutButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignoutButton1ActionPerformed(evt);
            }
        });

        AcknowledgeButton.setBackground(new java.awt.Color(204, 204, 204));
        AcknowledgeButton.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        AcknowledgeButton.setText("Acknowledge");
        AcknowledgeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcknowledgeButtonActionPerformed(evt);
            }
        });

        ShowButton1.setBackground(new java.awt.Color(255, 255, 255));
        ShowButton1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ShowButton1.setText("दाखवा");
        ShowButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowButton1ActionPerformed(evt);
            }
        });

        CompleteButton.setBackground(new java.awt.Color(102, 255, 102));
        CompleteButton.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        CompleteButton.setText("पूर्ण करा");
        CompleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompleteButtonActionPerformed(evt);
            }
        });

        RefreshShowRegisterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img-src/refresh.png"))); // NOI18N
        RefreshShowRegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshShowRegisterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ActionButtonsPanel1Layout = new javax.swing.GroupLayout(ActionButtonsPanel1);
        ActionButtonsPanel1.setLayout(ActionButtonsPanel1Layout);
        ActionButtonsPanel1Layout.setHorizontalGroup(
            ActionButtonsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActionButtonsPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(SignoutButton1)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(AcknowledgeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CompleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RefreshShowRegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ShowButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        ActionButtonsPanel1Layout.setVerticalGroup(
            ActionButtonsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActionButtonsPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(ActionButtonsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SignoutButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ShowButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CompleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AcknowledgeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RefreshShowRegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        EmployeeStatsOptions1.setBackground(new java.awt.Color(225, 250, 225));

        SortByEmployeeStatsLabel1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        SortByEmployeeStatsLabel1.setText("काळ निवडा");

        SortByEmployeeStatsComboBox1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        SortByEmployeeStatsComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "काळ", "गेला  आठवडा", "गेला महिना", "गेला वर्ष" }));
        SortByEmployeeStatsComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByEmployeeStatsComboBox1ActionPerformed(evt);
            }
        });

        ShowRegisterSortByLabel1.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        ShowRegisterSortByLabel1.setText("वर्गीकरण");

        WorksheetSortComboBox.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        WorksheetSortComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "क्रमाणे", "कार्यालयीन क्रमांक", "पत्र क्रमांक", "आवक दिनांक", "कोणाकडून आले", "विषय", "पाठवल्याचा दिनांक", "जावक दिनांक", "प्रगती" }));

        updownArrowToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img-src/arrow-down.png"))); // NOI18N
        updownArrowToggleButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                updownArrowToggleButtonStateChanged(evt);
            }
        });

        javax.swing.GroupLayout EmployeeStatsOptions1Layout = new javax.swing.GroupLayout(EmployeeStatsOptions1);
        EmployeeStatsOptions1.setLayout(EmployeeStatsOptions1Layout);
        EmployeeStatsOptions1Layout.setHorizontalGroup(
            EmployeeStatsOptions1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeeStatsOptions1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EmployeeStatsOptions1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ShowRegisterSortByLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SortByEmployeeStatsLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EmployeeStatsOptions1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SortByEmployeeStatsComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(EmployeeStatsOptions1Layout.createSequentialGroup()
                        .addComponent(WorksheetSortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updownArrowToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        EmployeeStatsOptions1Layout.setVerticalGroup(
            EmployeeStatsOptions1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeeStatsOptions1Layout.createSequentialGroup()
                .addGroup(EmployeeStatsOptions1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EmployeeStatsOptions1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ShowRegisterSortByLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(WorksheetSortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(updownArrowToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EmployeeStatsOptions1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SortByEmployeeStatsLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SortByEmployeeStatsComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        EmployeeStatsFilterPeriodPanel1.setBackground(new java.awt.Color(225, 250, 225));

        FromPeriodLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        FromPeriodLabel1.setText("पासून");

        FromPeriodField1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        FromPeriodField1.setMinimumSize(new java.awt.Dimension(110, 30));
        FromPeriodField1.setPreferredSize(new java.awt.Dimension(110, 30));

        ToPeriodField1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        ToPeriodField1.setMinimumSize(new java.awt.Dimension(110, 30));
        ToPeriodField1.setPreferredSize(new java.awt.Dimension(110, 30));

        ToPeriodLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        ToPeriodLabel1.setText("पर्यंत");

        javax.swing.GroupLayout EmployeeStatsFilterPeriodPanel1Layout = new javax.swing.GroupLayout(EmployeeStatsFilterPeriodPanel1);
        EmployeeStatsFilterPeriodPanel1.setLayout(EmployeeStatsFilterPeriodPanel1Layout);
        EmployeeStatsFilterPeriodPanel1Layout.setHorizontalGroup(
            EmployeeStatsFilterPeriodPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeeStatsFilterPeriodPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(FromPeriodLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FromPeriodField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ToPeriodLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ToPeriodField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        EmployeeStatsFilterPeriodPanel1Layout.setVerticalGroup(
            EmployeeStatsFilterPeriodPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmployeeStatsFilterPeriodPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(EmployeeStatsFilterPeriodPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FromPeriodLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromPeriodField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToPeriodLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToPeriodField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout AddLetterPanel1Layout = new javax.swing.GroupLayout(AddLetterPanel1);
        AddLetterPanel1.setLayout(AddLetterPanel1Layout);
        AddLetterPanel1Layout.setHorizontalGroup(
            AddLetterPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddLetterPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(AddLetterPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ActionButtonsPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(AddLetterPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(AddLetterPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AddLetterFormPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AddLetterPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(EmployeeStatsFilterPeriodPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(EmployeeStatsOptions1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(25, 25, 25))
        );
        AddLetterPanel1Layout.setVerticalGroup(
            AddLetterPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddLetterPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddLetterFormPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ActionButtonsPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmployeeStatsOptions1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmployeeStatsFilterPeriodPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        HeaderPanel.setBackground(new java.awt.Color(225, 250, 225));
        HeaderPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        HeadingPanel.setBackground(new java.awt.Color(147, 217, 163));
        HeadingPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        HeadingLabel.setBackground(new java.awt.Color(147, 217, 163));
        HeadingLabel.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        HeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeadingLabel.setText("कार्यविवरण पुस्तक");

        javax.swing.GroupLayout HeadingPanelLayout = new javax.swing.GroupLayout(HeadingPanel);
        HeadingPanel.setLayout(HeadingPanelLayout);
        HeadingPanelLayout.setHorizontalGroup(
            HeadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HeadingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        HeadingPanelLayout.setVerticalGroup(
            HeadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeadingPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(HeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HeadingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderPanelLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(HeadingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(AddLetterPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TablePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(HeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(HeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddLetterPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TablePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DateSentShowTodayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateSentShowTodayButtonActionPerformed
        // TODO add your handling code here:
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String date = LocalDate.now().format(formatter);

        FromDateField.setText(date);
    }//GEN-LAST:event_DateSentShowTodayButtonActionPerformed

    private void FromNameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FromNameComboBoxActionPerformed
        // TODO add your handling code here:
        System.out.println(FromNameComboBox.getSelectedItem());
        if (FromNameComboBox.getSelectedItem().equals("Other") && FromNameField.isVisible() == false) {
            FromNameField.setVisible(true);
            //            FromNameComboBoxFocusLost(evt);
        }
        else {
            FromNameField.setVisible(false);
        }

    }//GEN-LAST:event_FromNameComboBoxActionPerformed

    private void DateReceivedShowTodayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateReceivedShowTodayButtonActionPerformed
        // TODO add your handling code here:
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String date = LocalDate.now().format(formatter);

        ToDateReceivedField.setText(date);
    }//GEN-LAST:event_DateReceivedShowTodayButtonActionPerformed

    private void ToBranchComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToBranchComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ToBranchComboBoxActionPerformed

    private void SignoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignoutButtonActionPerformed
        // TODO add your handling code here:
        JLabel sure = new JLabel("बाहेर पडायचे आहे का?");
        sure.setFont(new Font("SanSerif", Font.PLAIN, 18));
        
        UIManager.put("OptionPane.buttonFont", new Font("SanSerif", Font.PLAIN, 15));
        
        Object[] options = {"हो","नाही"};
        int a = JOptionPane.showOptionDialog(null,
                sure,
                "साईन आउट",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,null,options,options[0]);
        if(a == JOptionPane.YES_OPTION){
            this.setVisible(false);
            new ClerkLogin().setVisible(true);
        }
    }//GEN-LAST:event_SignoutButtonActionPerformed

    private void AddLetterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddLetterButtonActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_AddLetterButtonActionPerformed

    private void ShowRegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowRegisterButtonActionPerformed
        // TODO add your handling code here:
        TablesPane.setSelectedIndex(0);
        EmployeeStatsOptions.setVisible(false);
        EmployeeStatsFilterPeriodPanel.setVisible(false);
        ShowRegisterPanel.setVisible(true);
    }//GEN-LAST:event_ShowRegisterButtonActionPerformed

    private void EmployeeStatsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeStatsButtonActionPerformed
        // TODO add your handling code here:
        TablesPane.setSelectedIndex(1);
        ShowRegisterPanel.setVisible(false);
        EmployeeStatsOptions.setVisible(true);
        EmployeeStatsFilterPeriodPanel.setVisible(true);
    }//GEN-LAST:event_EmployeeStatsButtonActionPerformed

    private void ShowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ShowButtonActionPerformed

    private void NameEmployeeStatsComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_NameEmployeeStatsComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_NameEmployeeStatsComboBoxItemStateChanged

    private void BranchEmployeeStatsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BranchEmployeeStatsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BranchEmployeeStatsComboBoxActionPerformed

    private void ShowRegisterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowRegisterTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ShowRegisterTableMouseClicked

    private void SignoutButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignoutButton1ActionPerformed
        // TODO add your handling code here:
        JLabel sure = new JLabel("बाहेर पडायचे आहे का?");
        sure.setFont(new Font("SanSerif", Font.PLAIN, 18));
        
        UIManager.put("OptionPane.buttonFont", new Font("SanSerif", Font.PLAIN, 15));
        
        Object[] options = {"हो","नाही"};
        int a = JOptionPane.showOptionDialog(null,
                sure,
                "साईन आउट",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,null,options,options[0]);
        if(a == JOptionPane.YES_OPTION){
            this.setVisible(false);
            new BranchLogin().setVisible(true);
        }
    }//GEN-LAST:event_SignoutButton1ActionPerformed

    private void ShowLetterInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowLetterInfoButtonActionPerformed
        // TODO add your handling code here:
        AcknowledgeButton.setVisible(false);
        CompleteButton.setVisible(false);
        try {
            // TODO add your handling code here:

            String InwardNo = InwardRegisterNoField.getText();
            ConnectionEstablish con = new ConnectionEstablish();
            String sql = "SELECT *,date_format(FromDateSent,'%d-%m-%y') AS FDS, "
                    + "date_format(ToDateReceived,'%d-%m-%y') AS TDR "
                    + "FROM letterinwardregister WHERE InwardNo='"+InwardNo+"'";
            PreparedStatement st = con.c.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            while(rs.next()){
                
                String FromNo = rs.getString("FromNo");
                String FromDateSent = rs.getString("FDS");
                String FromName = rs.getString("FromName");
                String Subject = rs.getString("Subject");
                String ToDateReceived = rs.getString("TDR");
                String Remark = rs.getString("Remark");
                String Progress = rs.getString("Progress");
                
                FromNumberField1.setText(FromNo);
                FromDateField1.setText(FromDateSent);
                FromNameField1.setText(FromName);
                SubjectField1.setText(Subject);
                ToDatReceivedField1.setText(ToDateReceived);
                RemarkTextArea.setText(Remark);
               
                if (Progress.equals("नवीन")) {
                    AcknowledgeButton.setVisible(true);
                }
                else if (Progress.equals("अपूर्ण")) {
                    CompleteButton.setVisible(true);
                }
                
            }
          
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_ShowLetterInfoButtonActionPerformed

    private void AcknowledgeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcknowledgeButtonActionPerformed
        // TODO add your handling code here:
        int WorksheetNo = 0;
        String InwardNo = InwardRegisterNoField.getText();
        
        try {
            
//          >>  READING THE BRANCH AND STORING IT IN BRANCH AND TOEMPLOYEE VARIABLES  
            BufferedReader br = new BufferedReader(new FileReader("login.txt"));
            String text = br.readLine();
//  branch:          
            String branch = text.split(",")[0];
//  toName:          
            String toName = text.split(",")[1];
            
            ConnectionEstablish con = new ConnectionEstablish();
            String sqlworksheet = "SELECT COUNT(*) FROM letter.letterinwardregister WHERE "
                    + "ToBranch = '"+branch+"' AND "
                    + "ToName='"+toName+"' AND "
                    + "WorksheetNo IS NOT NULL "
                    + "ORDER BY WorksheetNo"; 
            
            PreparedStatement stworksheet = con.c.prepareStatement(sqlworksheet);
            ResultSet rsworksheet = stworksheet.executeQuery();
            
            while(rsworksheet.next()){
                WorksheetNo = rsworksheet.getInt("COUNT(*)") + 1;
            }
            
            
            String sql = "UPDATE letterinwardregister SET Progress ='अपूर्ण', "
                    + "WorksheetNo = '"+WorksheetNo+"' "
                    + "WHERE InwardNo ='"+InwardNo+"'";
            
//            System.out.println(WorksheetNo);
            PreparedStatement st = con.c.prepareStatement(sql);
            int i = st.executeUpdate();
            
            
        } catch (IOException | SQLException e) {
            e.printStackTrace();
        }
        
        AcknowledgeButton.setVisible(false);
        initNewReceivedLetterTable();
        initWorksheetTable();
        
        FromNumberField1.setText("");
        FromDateField1.setText("");
        FromNameField1.setText("");
        SubjectField1.setText("");
        ToDatReceivedField1.setText("");
        RemarkTextArea.setText("");
    }//GEN-LAST:event_AcknowledgeButtonActionPerformed

    private void CompleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompleteButtonActionPerformed
        // TODO add your handling code here:
        
        String InwardNo = InwardRegisterNoField.getText();
        String Remark = RemarkTextArea.getText();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String OutDate = LocalDate.now().format(formatter);
        
        try {
                        
//          >>  READING THE BRANCH AND STORING IT IN BRANCH AND TOEMPLOYEE VARIABLES  
            BufferedReader br = new BufferedReader(new FileReader("login.txt"));
            String text = br.readLine();
//  branch:          
            String branch = text.split(",")[0];
//  toName:          
            String toName = text.split(",")[1];
            
            
            ConnectionEstablish con = new ConnectionEstablish();
            String sql = "UPDATE letterinwardregister SET Progress ='पूर्ण', "
                    + "Remark = '"+Remark+"', "
                    + "OutDate = STR_TO_DATE('"+OutDate+"','%d-%m-%Y')"
                    + "WHERE InwardNo ='"+InwardNo+"'";
            
//            System.out.println(WorksheetNo);
            PreparedStatement st = con.c.prepareStatement(sql);
            int i = st.executeUpdate();
            
            String sqlemployee = "UPDATE letteremployee SET "
                    + "Pending = Pending - 1, "
                    + "Completed = Completed + 1 "
                    + "WHERE Name = '"+toName+"' AND "
                    + "Branch = '"+branch+"'";
            PreparedStatement stemployee = con.c.prepareStatement(sqlemployee);
            int j = stemployee.executeUpdate();
            
        } catch (IOException | SQLException e) {
            e.printStackTrace();
        }
        
        AcknowledgeButton.setVisible(false);
        CompleteButton.setVisible(false);
        initNewReceivedLetterTable();
        initWorksheetTable();
        
        FromNumberField1.setText("");
        FromDateField1.setText("");
        FromNameField1.setText("");
        SubjectField1.setText("");
        ToDatReceivedField1.setText("");
        RemarkTextArea.setText("");
    }//GEN-LAST:event_CompleteButtonActionPerformed

    
    private void sortWorksheet(String parameter, String order) {
        
        DefaultTableModel WorksheetTableModel  = new DefaultTableModel();
        WorksheetTable.setModel(WorksheetTableModel);
        WorksheetTableModel.addColumn("क्रमांक");
        WorksheetTableModel.addColumn("कार्यपत्र");
        WorksheetTableModel.addColumn("<html>पत्र \nक्रमांक</html>");
        WorksheetTableModel.addColumn("<html>आवक \nदिनांक</html>");
        WorksheetTableModel.addColumn("<html>कोणाकडून \nआले</html>");
        WorksheetTableModel.addColumn("विषय");
        WorksheetTableModel.addColumn("<html>पाठवल्याचा \nदिनांक</html>");
        WorksheetTableModel.addColumn("<html>जावक \nदिनांक</html>");
        WorksheetTableModel.addColumn("टिपणी");
        WorksheetTableModel.addColumn("प्रगती");
        
        WorksheetTable.getTableHeader().setPreferredSize(
            new Dimension(WorksheetTable.getColumnModel().getTotalColumnWidth(), 32));
        
        WorksheetTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        WorksheetTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        
//        DATES
        WorksheetTable.getColumnModel().getColumn(3).setPreferredWidth(60);
        WorksheetTable.getColumnModel().getColumn(6).setPreferredWidth(60);
        WorksheetTable.getColumnModel().getColumn(7).setPreferredWidth(60);
        
        WorksheetTable.getColumnModel().getColumn(9).setPreferredWidth(50);
        
        try {
            
            ConnectionEstablish con = new ConnectionEstablish();
            String sql = "SELECT *,date_format(FromDateSent,'%d-%m-%y') AS FDS, "
                    + "date_format(ToDateReceived,'%d-%m-%y') AS TDR, "
                    + "date_format(OutDate,'%d-%m-%y') AS OD "
                    + "FROM letterinwardregister "
                    + "WHERE Progress = 'अपूर्ण' OR Progress = 'पूर्ण' "
                    + "ORDER BY "+parameter+" "+order;
            PreparedStatement st = con.c.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            while(rs.next()) {
                String InwardNo = rs.getString("InwardNo");
                String WorksheetNo = rs.getString("WorksheetNo");
                String FromNo = rs.getString("FromNo");
                String FromDateSent = rs.getString("FDS");
                String FromName = rs.getString("FromName");
                String Subject = rs.getString("Subject");
                String ToDateReceived = rs.getString("TDR");
                String OutDate = rs.getString("OD");
                String Remark = rs.getString("Remark");
                String Progress = rs.getString("Progress");
                
                String tableData[] = {InwardNo, WorksheetNo, FromNo, FromDateSent, 
                    FromName, Subject, ToDateReceived, OutDate, Remark, Progress};
            
                WorksheetTableModel.addRow(tableData);
                
            }
            
//            ShowRegisterTable.setAutoCreateRowSorter(true);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void WorksheetSortBox() {
        
        String sortBy = WorksheetSortComboBox.getSelectedItem().toString();
        
        if (sortBy.equals("कार्यालयीन क्रमांक")) {
            sortWorksheet("InwardNo", "DESC");
        }
        else if (sortBy.equals("कार्यपत्र क्रमांक")) {
            sortWorksheet("WorksheetNo", "DESC");
        }        
        else if (sortBy.equals("पत्र क्रमांक")) {
            sortWorksheet("FromNo", "DESC");
        }
        else if (sortBy.equals("आवक दिनांक")) {
            sortWorksheet("FromDateSent", "DESC");
        }
        else if (sortBy.equals("कोणाकडून आले")) {
            sortWorksheet("FromName", "DESC");
        }
        else if (sortBy.equals("विषय")) {
            sortWorksheet("Subject", "DESC");
        }
        else if (sortBy.equals("पाठवल्याचा दिनांक")) {
            sortWorksheet("ToDateReceived", "DESC");
        }
        else if (sortBy.equals("जावक दिनांक")) {
            sortWorksheet("OutDate", "DESC");
        }
        else if (sortBy.equals("प्रगती")) {
            sortWorksheet("Progress", "DESC");
        }
        
    }
    
    
    private void updownToggleButton () {
        
        String sortBy = WorksheetSortComboBox.getSelectedItem().toString();
        if (updownArrowToggleButton.isSelected()) {
            updownArrowToggleButton.setIcon(new ImageIcon(getClass().getResource("/img-src/arrow-up.png")));
            updownArrowToggleButton.setToolTipText("Ascending");
            

            if (sortBy.equals("कार्यालयीन क्रमांक")) {
                sortWorksheet("InwardNo", "ASC");
            }
            else if (sortBy.equals("कार्यपत्र क्रमांक")) {
                sortWorksheet("WorksheetNo", "ASC");
            }        
            else if (sortBy.equals("पत्र क्रमांक")) {
                sortWorksheet("FromNo", "ASC");
            }
            else if (sortBy.equals("आवक दिनांक")) {
                sortWorksheet("FromDateSent", "ASC");
            }
            else if (sortBy.equals("कोणाकडून आले")) {
                sortWorksheet("FromName", "ASC");
            }
            else if (sortBy.equals("विषय")) {
                sortWorksheet("Subject", "ASC");
            }
            else if (sortBy.equals("पाठवल्याचा दिनांक")) {
                sortWorksheet("ToDateReceived", "ASC");
            }
            else if (sortBy.equals("जावक दिनांक")) {
                sortWorksheet("OutDate", "ASC");
            }
            else if (sortBy.equals("प्रगती")) {
                sortWorksheet("Progress", "ASC");
            }
        }
//        else if (updownArrowToggleButton.isSelected() == false) {
        else {
            updownArrowToggleButton.setIcon(new ImageIcon(getClass().getResource("/img-src/arrow-down.png")));
            updownArrowToggleButton.setToolTipText("Descending");

            if (sortBy.equals("कार्यालयीन क्रमांक")) {
                sortWorksheet("InwardNo", "DESC");
            }
            else if (sortBy.equals("कार्यपत्र क्रमांक")) {
                sortWorksheet("WorksheetNo", "DESC");
            }        
            else if (sortBy.equals("पत्र क्रमांक")) {
                sortWorksheet("FromNo", "DESC");
            }
            else if (sortBy.equals("आवक दिनांक")) {
                sortWorksheet("FromDateSent", "DESC");
            }
            else if (sortBy.equals("कोणाकडून आले")) {
                sortWorksheet("FromName", "DESC");
            }
            else if (sortBy.equals("विषय")) {
                sortWorksheet("Subject", "DESC");
            }
            else if (sortBy.equals("पाठवल्याचा दिनांक")) {
                sortWorksheet("ToDateReceived", "DESC");
            }
            else if (sortBy.equals("जावक दिनांक")) {
                sortWorksheet("OutDate", "DESC");
            }
            else if (sortBy.equals("प्रगती")) {
                sortWorksheet("Progress", "DESC");
            }
        }
        
    }
    
    
    private void SortByEmployeeStatsComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByEmployeeStatsComboBox1ActionPerformed
        // TODO add your handling code here:
        
        periodComboBox();
        
    }//GEN-LAST:event_SortByEmployeeStatsComboBox1ActionPerformed

    private void periodComboBox() {
        
        String period = SortByEmployeeStatsComboBox1.getSelectedItem().toString();
        
        if (period.equals("गेला  आठवडा")) {
            DefaultTableModel WorksheetTableModel  = new DefaultTableModel();
            WorksheetTable.setModel(WorksheetTableModel);
            WorksheetTableModel.addColumn("क्रमांक");
            WorksheetTableModel.addColumn("कार्यपत्र");
            WorksheetTableModel.addColumn("<html>पत्र \nक्रमांक</html>");
            WorksheetTableModel.addColumn("<html>आवक \nदिनांक</html>");
            WorksheetTableModel.addColumn("<html>कोणाकडून \nआले</html>");
            WorksheetTableModel.addColumn("विषय");
            WorksheetTableModel.addColumn("<html>पाठवल्याचा \nदिनांक</html>");
            WorksheetTableModel.addColumn("<html>जावक \nदिनांक</html>");
            WorksheetTableModel.addColumn("टिपणी");
            WorksheetTableModel.addColumn("प्रगती");
    //        EmployeeStatsTableModel.addColumn("Days");

            WorksheetTable.getTableHeader().setPreferredSize(
                new Dimension(WorksheetTable.getColumnModel().getTotalColumnWidth(), 28));

            try {
                
//          >>  READING THE BRANCH AND STORING IT IN BRANCH AND TOEMPLOYEE VARIABLES  
            BufferedReader br = new BufferedReader(new FileReader("login.txt"));
            String text = br.readLine();
//  branch:          
            String branch = text.split(",")[0];
//  toEmployee:          
            String toName = text.split(",")[1];

                ConnectionEstablish con = new ConnectionEstablish();
                String sql = "SELECT *,date_format(FromDateSent,'%d-%m-%y') AS FDS, "
                        + "date_format(ToDateReceived,'%d-%m-%y') AS TDR, "
                        + "date_format(OutDate,'%d-%m-%y') AS OD "
                        + "FROM letterinwardregister "
                        + "WHERE ToBranch = '"+branch+"' AND "
                        + "ToName = '"+toName+"' AND "
                        + "(Progress = 'अपूर्ण' OR Progress = 'पूर्ण') AND "
                        + "ToDateReceived> now() -  interval 7 day";
                PreparedStatement st = con.c.prepareStatement(sql);
                ResultSet rs = st.executeQuery();

                while(rs.next()) {
                    String InwardNo = rs.getString("InwardNo");
                    String WorksheetNo = rs.getString("WorksheetNo");
                    String FromNo = rs.getString("FromNo");
                    String FromDateSent = rs.getString("FDS");
                    String FromName = rs.getString("FromName");
                    String Subject = rs.getString("Subject");
                    String ToDateReceived = rs.getString("TDR");
                    String OutDate = rs.getString("OD");
                    String Remark = rs.getString("Remark");
                    String Progress = rs.getString("Progress");
    //                String Days = rs.getString("Days");

                    String tableData[] = {InwardNo, WorksheetNo, FromNo, FromDateSent, FromName, 
                        Subject, ToDateReceived, OutDate, Remark, Progress};

                    WorksheetTableModel.addRow(tableData);
                }
            } catch(Exception e) {
                e.printStackTrace();
            }
        }
        else if (period.equals("गेला महिना")) {
            
            DefaultTableModel WorksheetTableModel  = new DefaultTableModel();
            WorksheetTable.setModel(WorksheetTableModel);
            WorksheetTableModel.addColumn("क्रमांक");
            WorksheetTableModel.addColumn("कार्यपत्र");
            WorksheetTableModel.addColumn("<html>पत्र \nक्रमांक</html>");
            WorksheetTableModel.addColumn("<html>आवक \nदिनांक</html>");
            WorksheetTableModel.addColumn("<html>कोणाकडून \nआले</html>");
            WorksheetTableModel.addColumn("विषय");
            WorksheetTableModel.addColumn("<html>पाठवल्याचा \nदिनांक</html>");
            WorksheetTableModel.addColumn("<html>जावक \nदिनांक</html>");
            WorksheetTableModel.addColumn("टिपणी");
            WorksheetTableModel.addColumn("प्रगती");
    //        EmployeeStatsTableModel.addColumn("Days");

            WorksheetTable.getTableHeader().setPreferredSize(
                new Dimension(WorksheetTable.getColumnModel().getTotalColumnWidth(), 28));

            try {
                
//          >>  READING THE BRANCH AND STORING IT IN BRANCH AND TOEMPLOYEE VARIABLES  
            BufferedReader br = new BufferedReader(new FileReader("login.txt"));
            String text = br.readLine();
//  branch:          
            String branch = text.split(",")[0];
//  toEmployee:          
            String toName = text.split(",")[1];

                ConnectionEstablish con = new ConnectionEstablish();
                String sql = "SELECT *,date_format(FromDateSent,'%d-%m-%y') AS FDS, "
                        + "date_format(ToDateReceived,'%d-%m-%y') AS TDR, "
                        + "date_format(OutDate,'%d-%m-%y') AS OD "
                        + "FROM letterinwardregister "
                        + "WHERE ToBranch = '"+branch+"' AND "
                        + "ToName = '"+toName+"' AND "
                        + "(Progress = 'अपूर्ण' OR Progress = 'पूर्ण') AND "
                        + "ToDateReceived> now() -  interval 31 day";
                PreparedStatement st = con.c.prepareStatement(sql);
                ResultSet rs = st.executeQuery();

                while(rs.next()) {
                    String InwardNo = rs.getString("InwardNo");
                    String WorksheetNo = rs.getString("WorksheetNo");
                    String FromNo = rs.getString("FromNo");
                    String FromDateSent = rs.getString("FDS");
                    String FromName = rs.getString("FromName");
                    String Subject = rs.getString("Subject");
                    String ToDateReceived = rs.getString("TDR");
                    String OutDate = rs.getString("OD");
                    String Remark = rs.getString("Remark");
                    String Progress = rs.getString("Progress");
    //                String Days = rs.getString("Days");

                    String tableData[] = {InwardNo, WorksheetNo, FromNo, FromDateSent, FromName, 
                        Subject, ToDateReceived, OutDate, Remark, Progress};

                    WorksheetTableModel.addRow(tableData);
                }
            } catch(Exception e) {
                e.printStackTrace();
            }
        }
        else if (period.equals("गेला वर्ष")) {
            DefaultTableModel WorksheetTableModel  = new DefaultTableModel();
            WorksheetTable.setModel(WorksheetTableModel);
            WorksheetTableModel.addColumn("क्रमांक");
            WorksheetTableModel.addColumn("कार्यपत्र");
            WorksheetTableModel.addColumn("<html>पत्र \nक्रमांक</html>");
            WorksheetTableModel.addColumn("<html>आवक \nदिनांक</html>");
            WorksheetTableModel.addColumn("<html>कोणाकडून \nआले</html>");
            WorksheetTableModel.addColumn("विषय");
            WorksheetTableModel.addColumn("<html>पाठवल्याचा \nदिनांक</html>");
            WorksheetTableModel.addColumn("<html>जावक \nदिनांक</html>");
            WorksheetTableModel.addColumn("टिपणी");
            WorksheetTableModel.addColumn("प्रगती");
    //        EmployeeStatsTableModel.addColumn("Days");

            WorksheetTable.getTableHeader().setPreferredSize(
                new Dimension(WorksheetTable.getColumnModel().getTotalColumnWidth(), 28));

            try {
                
//          >>  READING THE BRANCH AND STORING IT IN BRANCH AND TOEMPLOYEE VARIABLES  
            BufferedReader br = new BufferedReader(new FileReader("login.txt"));
            String text = br.readLine();
//  branch:          
            String branch = text.split(",")[0];
//  toEmployee:          
            String toName = text.split(",")[1];

                ConnectionEstablish con = new ConnectionEstablish();
                String sql = "SELECT *,date_format(FromDateSent,'%d-%m-%y') AS FDS, "
                        + "date_format(ToDateReceived,'%d-%m-%y') AS TDR, "
                        + "date_format(OutDate,'%d-%m-%y') AS OD "
                        + "FROM letterinwardregister "
                        + "WHERE ToBranch = '"+branch+"' AND "
                        + "ToName = '"+toName+"' AND "
                        + "(Progress = 'अपूर्ण' OR Progress = 'पूर्ण') AND "
                        + "ToDateReceived> now() -  interval 365 day";
                PreparedStatement st = con.c.prepareStatement(sql);
                ResultSet rs = st.executeQuery();

                while(rs.next()) {
                    String InwardNo = rs.getString("InwardNo");
                    String WorksheetNo = rs.getString("WorksheetNo");
                    String FromNo = rs.getString("FromNo");
                    String FromDateSent = rs.getString("FDS");
                    String FromName = rs.getString("FromName");
                    String Subject = rs.getString("Subject");
                    String ToDateReceived = rs.getString("TDR");
                    String OutDate = rs.getString("OD");
                    String Remark = rs.getString("Remark");
                    String Progress = rs.getString("Progress");
    //                String Days = rs.getString("Days");

                    String tableData[] = {InwardNo, WorksheetNo, FromNo, FromDateSent, FromName, 
                        Subject, ToDateReceived, OutDate, Remark, Progress};

                    WorksheetTableModel.addRow(tableData);
                }
            } catch(Exception e) {
                e.printStackTrace();
            }
        }
        else if (period.equals("काळ")) {
        }
        
    }
    
    private void ShowButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowButton1ActionPerformed
        // TODO add your handling code here:
        if (SortByEmployeeStatsComboBox1.getSelectedItem().equals("काळ")) {
               
            if (FromPeriodField.getText().equals("dd-MM-yyyy") || ToPeriodField.getText().equals("dd-MM-yyyy")) {
                WorksheetSortBox();
            }
            else {
                
                SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                SimpleDateFormat sdfNew = new SimpleDateFormat("yyyy-MM-dd");
                String from = null;
                String to = null;

                try {
                    
                    Date fromDate = sdf.parse(FromPeriodField1.getText());
                    Date toDate = sdf.parse(ToPeriodField1.getText());
                    from = sdfNew.format(fromDate);
                    to = sdfNew.format(toDate);
                    
                } catch (ParseException e) {
                    e.printStackTrace();
                }


                initWorksheetPeriodTable(from, to);
            } 
        }
        else {
            WorksheetSortBox();
        }
    }//GEN-LAST:event_ShowButton1ActionPerformed

    private void initWorksheetPeriodTable (String from, String to) {
        
        DefaultTableModel WorksheetTableModel  = new DefaultTableModel();
            WorksheetTable.setModel(WorksheetTableModel);
            WorksheetTableModel.addColumn("क्रमांक");
            WorksheetTableModel.addColumn("कार्यपत्र");
            WorksheetTableModel.addColumn("<html>पत्र \nक्रमांक</html>");
            WorksheetTableModel.addColumn("<html>आवक \nदिनांक</html>");
            WorksheetTableModel.addColumn("<html>कोणाकडून \nआले</html>");
            WorksheetTableModel.addColumn("विषय");
            WorksheetTableModel.addColumn("<html>पाठवल्याचा \nदिनांक</html>");
            WorksheetTableModel.addColumn("<html>जावक \nदिनांक</html>");
            WorksheetTableModel.addColumn("टिपणी");
            WorksheetTableModel.addColumn("प्रगती");
    //        EmployeeStatsTableModel.addColumn("Days");

            WorksheetTable.getTableHeader().setPreferredSize(
                new Dimension(WorksheetTable.getColumnModel().getTotalColumnWidth(), 28));

            try {
                
//          >>  READING THE BRANCH AND STORING IT IN BRANCH AND TOEMPLOYEE VARIABLES  
            BufferedReader br = new BufferedReader(new FileReader("login.txt"));
            String text = br.readLine();
//  branch:          
            String branch = text.split(",")[0];
//  toEmployee:          
            String toName = text.split(",")[1];

                ConnectionEstablish con = new ConnectionEstablish();
                String sql = "SELECT *,date_format(FromDateSent,'%d-%m-%y') AS FDS, "
                        + "date_format(ToDateReceived,'%d-%m-%y') AS TDR, "
                        + "date_format(OutDate,'%d-%m-%y') AS OD "
                        + "FROM letter.letterinwardregister "
                        + "WHERE ToBranch = '"+branch+"' AND "
                        + "ToName = '"+toName+"' AND "
                        + "ToDateReceived BETWEEN '"+from+"' AND '"+to+"' AND "
                        + "(Progress = 'अपूर्ण' OR Progress = 'पूर्ण')";
                PreparedStatement st = con.c.prepareStatement(sql);
                ResultSet rs = st.executeQuery();

                while(rs.next()) {
                    String InwardNo = rs.getString("InwardNo");
                    String WorksheetNo = rs.getString("WorksheetNo");
                    String FromNo = rs.getString("FromNo");
                    String FromDateSent = rs.getString("FDS");
                    String FromName = rs.getString("FromName");
                    String Subject = rs.getString("Subject");
                    String ToDateReceived = rs.getString("TDR");
                    String OutDate = rs.getString("OD");
                    String Remark = rs.getString("Remark");
                    String Progress = rs.getString("Progress");
    //                String Days = rs.getString("Days");

                    String tableData[] = {InwardNo, WorksheetNo, FromNo, FromDateSent, FromName, 
                        Subject, ToDateReceived, OutDate, Remark, Progress};

                    WorksheetTableModel.addRow(tableData);
                }
            } catch(Exception e) {
                e.printStackTrace();
            }
    }
    
    
    private void updownArrowToggleButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_updownArrowToggleButtonStateChanged
        // TODO add your handling code here:
        
        updownToggleButton();
    }//GEN-LAST:event_updownArrowToggleButtonStateChanged

    private void RefreshShowRegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshShowRegisterButtonActionPerformed
        // TODO add your handling code here:
        initWorksheetTable();
    }//GEN-LAST:event_RefreshShowRegisterButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private void initFrame() {
        setExtendedState(MAXIMIZED_BOTH);
        setUIFont (new javax.swing.plaf.FontUIResource("SansSerif",Font.PLAIN,12));
        
        URL iconURL = getClass().getResource("/img-src/logo.png");
        // iconURL is null when not found
        ImageIcon icon = new ImageIcon(iconURL);
        setIconImage(icon.getImage());
        setTitle("जलसंपदा विभाग, महाराष्ट्र शासन, भारत");
        
        initNewReceivedLetterTable();
        initWorksheetTable();
        AcknowledgeButton.setVisible(false);
        CompleteButton.setVisible(false);
        EmployeeStatsFilterPeriodPanel1.setVisible(true);
                
    }
    
    private void initNewReceivedLetterTable() {
        
//      >>  CREATING DEFAULT TABLE MODEL -> {STRING, STRING, STRING, BOOLEAN}
        DefaultTableModel NewReceivedLettersTableModel  = new DefaultTableModel();
//      >>  ADDING THE TABLE MODEL TO THE TABLE
        NewReceivedLettersTable.setModel(NewReceivedLettersTableModel);
        
//      >>  ADDING THE COLUMNS
        NewReceivedLettersTableModel.addColumn("कार्यालयीन क्रमांक");
        NewReceivedLettersTableModel.addColumn("पत्र क्रमांक");
        NewReceivedLettersTableModel.addColumn("आवक दिनांक");
        NewReceivedLettersTableModel.addColumn("कोणाकडून आले");
        NewReceivedLettersTableModel.addColumn("विषय");
        NewReceivedLettersTableModel.addColumn("पाठवल्याचा दिनांक");
        NewReceivedLettersTableModel.addColumn("प्रगती");
        
        
        NewReceivedLettersTable.getTableHeader().setPreferredSize(
            new Dimension(NewReceivedLettersTable.getColumnModel().getTotalColumnWidth(), 28));
        
        try{
//          >>  READING THE BRANCH AND STORING IT IN BRANCH AND TOEMPLOYEE VARIABLES  
            BufferedReader br = new BufferedReader(new FileReader("login.txt"));
            String text = br.readLine();
//  branch:          
            String branch = text.split(",")[0];
//  toEmployee:          
            String toName = text.split(",")[1];
            
//          >>  1. ESTABLISHING CONNECTION WITH SQL DATABASE
            ConnectionEstablish con = new ConnectionEstablish();
            
//          >>  2. DISPLAYING PENDING/NEW LETTERS ASSIGNED TO THE EMPLOYEE
            String sql = "SELECT *,date_format(FromDateSent,'%d-%m-%y') AS FDS, "
                    + "date_format(ToDateReceived,'%d-%m-%y') AS TDR "
                    + "FROM letterinwardregister "
                    + "WHERE ToBranch = '"+branch+"' AND "
                    + "ToName = '"+toName+"' AND "
                    + "Progress = 'नवीन'";
            PreparedStatement st = con.c.prepareStatement(sql);
            ResultSet rs = st.executeQuery(sql);
            
//          >>  3. ENTERING THE VALUES IN THE TABLE
            while(rs.next()){
                String InwardNo = rs.getString("InwardNo");
                String FromNo = rs.getString("FromNo");
                String FromDate = rs.getString("FDS");
                String FromName = rs.getString("FromName");
                String Subject = rs.getString("Subject");
                String ToDate = rs.getString("TDR");
                String Progress = rs.getString("Progress");
                
                String tableData[] = {InwardNo, FromNo, FromDate, 
                    FromName, Subject, ToDate, Progress};
            
                NewReceivedLettersTableModel.addRow(tableData);
            }
            
        } catch (IOException | SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void initWorksheetTable() {
        
//      >>  CREATING DEFAULT TABLE MODEL -> {STRING, STRING, STRING, BOOLEAN}
        DefaultTableModel WorksheetTableModel  = new DefaultTableModel();
//      >>  ADDING THE TABLE MODEL TO THE TABLE
        WorksheetTable.setModel(WorksheetTableModel);
        
//      >>  ADDING THE COLUMNS
        WorksheetTableModel.addColumn("क्रमांक");
        WorksheetTableModel.addColumn("कार्यपत्र");
        WorksheetTableModel.addColumn("<html>पत्र \nक्रमांक</html>");
        WorksheetTableModel.addColumn("<html>आवक \nदिनांक</html>");
        WorksheetTableModel.addColumn("<html>कोणाकडून \nआले</html>");
        WorksheetTableModel.addColumn("विषय");
        WorksheetTableModel.addColumn("<html>पाठवल्याचा \nदिनांक</html>");
        WorksheetTableModel.addColumn("<html>जावक \nदिनांक</html>");
        WorksheetTableModel.addColumn("टिपणी");
        WorksheetTableModel.addColumn("प्रगती");
        
        
        WorksheetTable.getTableHeader().setPreferredSize(
            new Dimension(WorksheetTable.getColumnModel().getTotalColumnWidth(), 28));
        
        try{
//          >>  READING THE BRANCH AND STORING IT IN BRANCH AND TOEMPLOYEE VARIABLES  
            BufferedReader br = new BufferedReader(new FileReader("login.txt"));
            String text = br.readLine();
//  branch:          
            String branch = text.split(",")[0];
//  toEmployee:          
            String toName = text.split(",")[1];
            
//          >>  1. ESTABLISHING CONNECTION WITH SQL DATABASE
            ConnectionEstablish con = new ConnectionEstablish();
            
//          >>  2. DISPLAYING PENDING/NEW LETTERS ASSIGNED TO THE EMPLOYEE
            String sql = "SELECT *,date_format(FromDateSent,'%d-%m-%y') AS FDS, "
                    + "date_format(ToDateReceived,'%d-%m-%y') AS TDR, "
                    + "date_format(OutDate,'%d-%m-%y') AS OD "
                    + "FROM letterinwardregister "
                    + "WHERE ToBranch = '"+branch+"' AND "
                    + "ToName = '"+toName+"' AND "
                    + "(Progress = 'पूर्ण' OR Progress = 'अपूर्ण') "
                    + "ORDER BY WorksheetNo";
            PreparedStatement st = con.c.prepareStatement(sql);
            ResultSet rs = st.executeQuery(sql);
            
//          >>  3. ENTERING THE VALUES IN THE TABLE
            while(rs.next()){
                String InwardNo = rs.getString("InwardNo");
                String WorksheetNo = rs.getString("WorksheetNo");
                String FromNo = rs.getString("FromNo");
                String FromDate = rs.getString("FDS");
                String FromName = rs.getString("FromName");
                String Subject = rs.getString("Subject");
                String ToDate = rs.getString("TDR");
                String OutDate = rs.getString("OD");
                String Remark = rs.getString("Remark");
                String Progress = rs.getString("Progress");
                
                String tableData[] = {InwardNo, WorksheetNo, FromNo, FromDate, 
                    FromName, Subject, ToDate, OutDate, Remark, Progress};
            
                WorksheetTableModel.addRow(tableData);
            }
            
        } catch (IOException | SQLException e) {
            e.printStackTrace();
        }
    }   
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BranchWorksheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BranchWorksheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BranchWorksheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BranchWorksheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BranchWorksheet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcknowledgeButton;
    private javax.swing.JPanel ActionButtonsPanel;
    private javax.swing.JPanel ActionButtonsPanel1;
    private javax.swing.JButton AddLetterButton;
    private javax.swing.JPanel AddLetterFormPanel;
    private javax.swing.JPanel AddLetterFormPanel1;
    private javax.swing.JPanel AddLetterPanel;
    private javax.swing.JPanel AddLetterPanel1;
    private javax.swing.JComboBox<String> BranchEmployeeStatsComboBox;
    private javax.swing.JButton CompleteButton;
    private javax.swing.JButton DateReceivedShowTodayButton;
    private javax.swing.JButton DateSentShowTodayButton;
    private javax.swing.JButton EmployeeStatsButton;
    private javax.swing.JPanel EmployeeStatsFilterPeriodPanel;
    private javax.swing.JPanel EmployeeStatsFilterPeriodPanel1;
    private javax.swing.JPanel EmployeeStatsOptions;
    private javax.swing.JPanel EmployeeStatsOptions1;
    private javax.swing.JPanel EmployeeStatsPane;
    private javax.swing.JScrollPane EmployeeStatsScrollPane;
    private javax.swing.JTable EmployeeStatsTable;
    private javax.swing.JTextField FromDateField;
    private javax.swing.JLabel FromDateField1;
    private javax.swing.JLabel FromDateLabel;
    private javax.swing.JLabel FromDateLabel1;
    private javax.swing.JLabel FromLabel1;
    private javax.swing.JTextField FromLetterNoField;
    private javax.swing.JLabel FromLetterNoLabel;
    private javax.swing.JComboBox<String> FromNameComboBox;
    private javax.swing.JTextField FromNameField;
    private javax.swing.JLabel FromNameField1;
    private javax.swing.JLabel FromNameLabel;
    private javax.swing.JLabel FromNameLabel1;
    private javax.swing.JLabel FromNumberField1;
    private javax.swing.JLabel FromNumberLabel1;
    private javax.swing.JPanel FromPanel;
    private javax.swing.JPanel FromPanel1;
    private javax.swing.JTextField FromPeriodField;
    private javax.swing.JTextField FromPeriodField1;
    private javax.swing.JLabel FromPeriodLabel;
    private javax.swing.JLabel FromPeriodLabel1;
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JLabel HeadingLabel;
    private javax.swing.JPanel HeadingPanel;
    private javax.swing.JTextField InwardRegisterNoField;
    private javax.swing.JLabel InwardRegisterNoLabel;
    private javax.swing.JLabel InwardRegisterNoLabel1;
    private javax.swing.JPanel InwardRegisterNumberPanel;
    private javax.swing.JPanel InwardRegisterNumberPanel1;
    private javax.swing.JLabel InwardRegsiterNumberField;
    private javax.swing.JComboBox<String> NameEmployeeStatsComboBox;
    private javax.swing.JPanel NewLettersPanel;
    private javax.swing.JLabel NewReceivedLettersLabel;
    private javax.swing.JTable NewReceivedLettersTable;
    private javax.swing.JPanel NewReceivedLettersTablePanel;
    private javax.swing.JScrollPane NewReceivedLettersTableScroll;
    private javax.swing.JButton RefreshShowRegisterButton;
    private javax.swing.JLabel RemarkLabel;
    private javax.swing.JPanel RemarkPanel;
    private javax.swing.JTextArea RemarkTextArea;
    private javax.swing.JButton ShowButton;
    private javax.swing.JButton ShowButton1;
    private javax.swing.JScrollPane ShowDirectoryScrollPane;
    private javax.swing.JButton ShowLetterInfoButton;
    private javax.swing.JButton ShowRegisterButton;
    private javax.swing.JPanel ShowRegisterPanel;
    private javax.swing.JComboBox<String> ShowRegisterSortByComboBox;
    private javax.swing.JLabel ShowRegisterSortByLabel;
    private javax.swing.JLabel ShowRegisterSortByLabel1;
    private javax.swing.JTable ShowRegisterTable;
    private javax.swing.JButton SignoutButton;
    private javax.swing.JButton SignoutButton1;
    private javax.swing.JComboBox<String> SortByEmployeeStatsComboBox;
    private javax.swing.JComboBox<String> SortByEmployeeStatsComboBox1;
    private javax.swing.JLabel SortByEmployeeStatsLabel;
    private javax.swing.JLabel SortByEmployeeStatsLabel1;
    private javax.swing.JTextField SubjectField;
    private javax.swing.JLabel SubjectField1;
    private javax.swing.JLabel SubjectLabel;
    private javax.swing.JLabel SubjectLabel1;
    private javax.swing.JPanel SubjectPanel;
    private javax.swing.JPanel SubjectPanel1;
    private javax.swing.JPanel TablePanel;
    private javax.swing.JPanel TablePanel1;
    private javax.swing.JTabbedPane TablesPane;
    private javax.swing.JScrollPane TasksScrollPane;
    private javax.swing.JTable TasksTable;
    private javax.swing.JComboBox<String> ToBranchComboBox;
    private javax.swing.JLabel ToBranchLabel;
    private javax.swing.JLabel ToDatReceivedField1;
    private javax.swing.JTextField ToDateReceivedField;
    private javax.swing.JLabel ToDateReceivedLabel;
    private javax.swing.JLabel ToDateReceivedLabel1;
    private javax.swing.JLabel ToDateReceivedLabel2;
    private javax.swing.JLabel ToDateReceivedLabel3;
    private javax.swing.JComboBox<String> ToNameComboBox;
    private javax.swing.JLabel ToNameLabel;
    private javax.swing.JPanel ToPanel;
    private javax.swing.JPanel ToPanel1;
    private javax.swing.JTextField ToPeriodField;
    private javax.swing.JTextField ToPeriodField1;
    private javax.swing.JLabel ToPeriodLabel;
    private javax.swing.JLabel ToPeriodLabel1;
    private javax.swing.JPanel WorksheetPanel;
    private javax.swing.JScrollPane WorksheetScrollPane;
    private javax.swing.JComboBox<String> WorksheetSortComboBox;
    private javax.swing.JTable WorksheetTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton updownArrowToggleButton;
    // End of variables declaration//GEN-END:variables
}
